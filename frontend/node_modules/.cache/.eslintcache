[{"/home/telix/movie-downloader/frontend/src/index.js":"1","/home/telix/movie-downloader/frontend/src/reportWebVitals.js":"2","/home/telix/movie-downloader/frontend/src/App.js":"3","/home/telix/movie-downloader/frontend/src/theme.js":"4","/home/telix/movie-downloader/frontend/src/components/TrasnmissionList.js":"5","/home/telix/movie-downloader/frontend/src/components/MovieSearchBar.js":"6","/home/telix/movie-downloader/frontend/src/yify-cli.js":"7","/home/telix/movie-downloader/frontend/src/transmission-cli.js":"8","/home/telix/movie-downloader/frontend/src/components/SuggestionCard.js":"9","/home/telix/movie-downloader/frontend/src/components/TorrentCard.js":"10","/home/telix/movie-downloader/frontend/src/components/CirularProgess.js":"11","/home/telix/movie-downloader/frontend/src/components/LinearProgressWithLabel.js":"12","/home/telix/movie-downloader/frontend/src/utils.js":"13","/home/telix/movie-downloader/frontend/src/components/LoadingTorrentCard.js":"14","/home/telix/movie-downloader/frontend/src/components/LinearProgressMemory.js":"15","/home/telix/movie-downloader/frontend/src/components/ThemeChangeButton.js":"16"},{"size":535,"mtime":1680157467182,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1680157467183,"results":"19","hashOfConfig":"18"},{"size":2734,"mtime":1681236178385,"results":"20","hashOfConfig":"18"},{"size":804,"mtime":1681234984537,"results":"21","hashOfConfig":"18"},{"size":931,"mtime":1681192069418,"results":"22","hashOfConfig":"18"},{"size":4594,"mtime":1681209201791,"results":"23","hashOfConfig":"18"},{"size":981,"mtime":1681238480112,"results":"24","hashOfConfig":"18"},{"size":1043,"mtime":1681238327207,"results":"25","hashOfConfig":"18"},{"size":4244,"mtime":1680456990425,"results":"26","hashOfConfig":"18"},{"size":4182,"mtime":1681208432507,"results":"27","hashOfConfig":"18"},{"size":1406,"mtime":1681185032522,"results":"28","hashOfConfig":"18"},{"size":680,"mtime":1681209413917,"results":"29","hashOfConfig":"18"},{"size":1098,"mtime":1681204144813,"results":"30","hashOfConfig":"18"},{"size":1613,"mtime":1681235039838,"results":"31","hashOfConfig":"18"},{"size":1560,"mtime":1681234877057,"results":"32","hashOfConfig":"18"},{"size":855,"mtime":1681236817874,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"29ig4e",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/telix/movie-downloader/frontend/src/index.js",[],[],[],"/home/telix/movie-downloader/frontend/src/reportWebVitals.js",[],[],"/home/telix/movie-downloader/frontend/src/App.js",[],[],"/home/telix/movie-downloader/frontend/src/theme.js",["86"],[],"import { createTheme } from '@mui/material/styles';\nimport { cyan, grey, yellow, green } from '@mui/material/colors';\n\nconst lightTheme = createTheme({\n    palette: {\n        mode: 'light',\n        primary: {\n            main: green[800],\n        },\n        secondary: {\n            main: grey[400],\n        },\n        yellow: {\n            main: yellow[600],\n            light: '#ffa726',\n            dark: '#ef6c00',\n            contrastText: 'rgba(0, 0, 0, 0.87)',\n        },\n        white: {\n            main: grey[500],\n        },\n    },\n});\n\nconst darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n        primary: {\n            main: green[800], // white\n        },\n        secondary: {\n            main: grey[200], // more grey\n        },\n    },\n});\n\nexport { lightTheme, darkTheme }","/home/telix/movie-downloader/frontend/src/components/TrasnmissionList.js",[],[],"/home/telix/movie-downloader/frontend/src/components/MovieSearchBar.js",[],[],"/home/telix/movie-downloader/frontend/src/yify-cli.js",[],[],"/home/telix/movie-downloader/frontend/src/transmission-cli.js",[],[],"/home/telix/movie-downloader/frontend/src/components/SuggestionCard.js",["87"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\n\n\nexport default function SuggestionCard({ suggestion, selectTorrent }) {\n\n    const choose_default_torrent = suggestion => {\n        // this function will choses the torrent with the 1080p quality if there is as default\n        // else it will chose the first torrent in the list\n        let default_torrent = suggestion.torrents[0];\n        for (let torrent of suggestion.torrents) {\n            if (torrent.quality === \"1080p\") {\n                return default_torrent = torrent;\n            }\n        }\n        return default_torrent;\n    }\n\n    // the torrent url to pass to the transmission client\n    const [torrent, setTorrent] = React.useState(choose_default_torrent(suggestion));\n    const [url, setUrl] = React.useState(choose_default_torrent(suggestion).url);\n    // set the 1080 torrent as the default as soon as it loads\n\n    const handleChange = event => {\n        console.log('value:', event.target.value);\n        let torrent = suggestion.torrents.filter(torrent => torrent.url === event.target.value)[0];\n        setTorrent(torrent);\n        setUrl(torrent.url);\n    };\n\n    return (\n        <Card sx={{ display: 'flex' }}>\n            <Box sx={{ display: 'flex', flexDirection: 'row' }}>\n                <CardMedia\n                    component=\"img\"\n                    sx={{ width: 51 }}\n                    image={suggestion.small_cover_image}\n                    alt={suggestion.title}\n                />\n                <CardContent sx={{ flex: '1 0 auto' }}>\n                    <Typography component=\"div\" > {suggestion.title} </Typography>\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\n                        ({suggestion.year}) - {suggestion.rating} - {suggestion.language} -\n                        {suggestion.genres ? suggestion.genres.map(genre => genre + \" \") : \"\"}\n                    </Typography>\n                </CardContent>\n                {/* add imbd icon button link */}\n                <FormControl>\n                    <Box sx={{ display: 'flex', alignSelf: 'right', alignItems: 'center', pl: 1, pb: 1 }}>\n                        <RadioGroup aria-label=\"quality\" name=\"quality\"\n                            onChange={e => handleChange(e)}\n                            defaultValue={choose_default_torrent(suggestion).url}>\n                            {suggestion.torrents.map(torrent =>\n                                <FormControlLabel\n                                    key={torrent.url}\n                                    value={torrent.url}\n                                    size=\"small\"\n                                    label={<Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                                        <Typography variant=\"subtitle2\" fontSize={16} p={0.2}> {torrent.type} </Typography>\n                                        <Typography variant=\"subtitle2\" fontSize={16} p={0.2}> {torrent.quality} </Typography>\n                                        <Typography variant=\"subtitle2\" fontSize={16} p={0.2}> {torrent.size} </Typography>\n                                    </Box>}\n                                    control={<Radio />}\n                                />\n                            )}\n                        </RadioGroup>\n                        <IconButton \n                            aria-label=\"download\" \n                            onClick={() => selectTorrent(suggestion, torrent)}>\n                            <FileDownloadIcon sx={{ height: 38, width: 38 }} />\n                        </IconButton>\n                    </Box>\n                </FormControl>\n            </Box>\n        </Card>\n    );\n}","/home/telix/movie-downloader/frontend/src/components/TorrentCard.js",[],[],"/home/telix/movie-downloader/frontend/src/components/CirularProgess.js",[],[],"/home/telix/movie-downloader/frontend/src/components/LinearProgressWithLabel.js",[],[],"/home/telix/movie-downloader/frontend/src/utils.js",[],[],"/home/telix/movie-downloader/frontend/src/components/LoadingTorrentCard.js",["88"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Skeleton from '@mui/material/Skeleton';\n\nexport default function LoadingTorrentCard({ torrent }) {\n\n    return (\n        <Card sx={{ display: 'flex', marginY: 1, marginX: \"5%\" }}>\n            <Box sx={{ display: 'flex', flexDirection: 'row', width: '100%' }}>\n                <Skeleton sx={{ width: '8rem', height: '100%' }} animation=\"wave\" variant=\"rectangular\" />\n                <CardContent sx={{ display: 'flex', flexDirection: 'row', width: '100%' }}>\n                    <Box sx={{ display: 'flex', flexDirection: 'column', width: '100%' }}>\n                        <Skeleton sx={{ marginBottom: 1 }} animation=\"wave\" height={30} width=\"30%\" />\n                        <Skeleton sx={{ marginBottom: 2 }} animation=\"wave\" height={10} width=\"25%\" />\n                        <Skeleton sx={{ marginBottom: 2 }} animation=\"wave\" height={20} width=\"100%\" />\n                        <Skeleton sx={{ marginBottom: 3 }} animation=\"wave\" height={10} width=\"25%\" />\n                    </Box>\n                </CardContent>\n            </Box >\n            <Box sx={{ display: 'flex', flexDirection: 'column' }} >\n                <Skeleton sx={{ marginY: 1, marginX: 3}} variant=\"circular\" animation=\"wave\" height={80} width={80} />\n                <Skeleton sx={{ marginY: 1, marginX: 3 }} variant=\"rectangular\" animation=\"wave\" height={60} width={60} />\n            </Box>\n        </Card >\n    );\n}","/home/telix/movie-downloader/frontend/src/components/LinearProgressMemory.js",[],[],"/home/telix/movie-downloader/frontend/src/components/ThemeChangeButton.js",[],[],{"ruleId":"89","severity":1,"message":"90","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":14},{"ruleId":"89","severity":1,"message":"93","line":31,"column":12,"nodeType":"91","messageId":"92","endLine":31,"endColumn":15},{"ruleId":"89","severity":1,"message":"94","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":17},"no-unused-vars","'cyan' is defined but never used.","Identifier","unusedVar","'url' is assigned a value but never used.","'CardMedia' is defined but never used."]