{"ast":null,"code":"var _jsxFileName = \"/home/telix/movie-downloader/src/components/cardContent/ParsedDataContent.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport ParseDataPoint from './ParsedDataPoint.js';\nimport CardContent from '@mui/material/CardContent';\nimport stylize from '../../utils/stylize.js';\nimport { Grid, Stack } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledCardContent = stylize(CardContent, _ref => {\n  let {\n    theme,\n    $expand\n  } = _ref;\n  return {\n    transition: theme.transitions.create(['transform', 'width', 'height'], {\n      duration: theme.transitions.duration.standard\n    }),\n    // auto does not allow css transitions, bummer.\n    // but auto is key so tidoesnot overflow in the phone size\n    textAlign: 'center',\n    maxWidth: 1200,\n    transform: $expand ? 'scale(1)' : 'scale(0.8)',\n    width: $expand ? '80vw' : 300,\n    height: $expand ? 'auto' : 150\n  };\n});\n_c = StyledCardContent;\nexport default function ParsedDataContent(_ref2) {\n  _s();\n  let {\n    expand,\n    stocks\n  } = _ref2;\n  let [stockData, setStockData] = React.useState([]);\n  let [keys, setKeys] = React.useState([]);\n  React.useEffect(() => {\n    let data = stocks.map(stock => ({\n      color: stock.color,\n      data: {\n        ...stock.quoteSummary['defaultKeyStatistics'],\n        ...stock.quoteSummary['financialData']\n      }\n    }));\n    let keySet = new Set();\n    data.forEach(_ref3 => {\n      let {\n        data\n      } = _ref3;\n      return Object.keys(data).forEach(key => keySet.add(key));\n    });\n    //console.log(\"keySet:\", keySet)\n    data.forEach(data => delete data.maxAge);\n    setStockData([...data]);\n    setKeys([...keySet]);\n  }, [stocks]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledCardContent, {\n      $expand: expand,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        children: keys.map(key => /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          textAlign: 'left',\n          xs: 12,\n          md: expand ? 6 : 12,\n          xl: expand ? 3 : 12,\n          children: [/*#__PURE__*/_jsxDEV(ParseDataPoint, {\n            showLabel: true,\n            label: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), stockData.filter(stock => stock.data[key]).map((stock, i) => /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            spacing: 0.7,\n            children: /*#__PURE__*/_jsxDEV(ParseDataPoint, {\n              color: stock.color,\n              data: stock.data[key]\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this))]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(ParsedDataContent, \"iqqfoM28KMEczmZgXeYAhsgGGx4=\");\n_c2 = ParsedDataContent;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledCardContent\");\n$RefreshReg$(_c2, \"ParsedDataContent\");","map":{"version":3,"names":["React","ParseDataPoint","CardContent","stylize","Grid","Stack","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledCardContent","_ref","theme","$expand","transition","transitions","create","duration","standard","textAlign","maxWidth","transform","width","height","_c","ParsedDataContent","_ref2","_s","expand","stocks","stockData","setStockData","useState","keys","setKeys","useEffect","data","map","stock","color","quoteSummary","keySet","Set","forEach","_ref3","Object","key","add","maxAge","children","container","direction","item","xs","md","xl","showLabel","label","fileName","_jsxFileName","lineNumber","columnNumber","filter","i","spacing","_c2","$RefreshReg$"],"sources":["/home/telix/movie-downloader/src/components/cardContent/ParsedDataContent.js"],"sourcesContent":["import * as React from 'react';\nimport ParseDataPoint from './ParsedDataPoint.js';\nimport CardContent from '@mui/material/CardContent';\nimport stylize from '../../utils/stylize.js'\nimport { Grid, Stack } from '@mui/material';\n\n\nconst StyledCardContent = stylize(CardContent, ({ theme, $expand }) => ({\n  transition: theme.transitions.create(['transform', 'width', 'height'], {\n    duration: theme.transitions.duration.standard,\n  }),\n  // auto does not allow css transitions, bummer.\n  // but auto is key so tidoesnot overflow in the phone size\n  textAlign: 'center',\n  maxWidth: 1200,\n  transform: $expand ? 'scale(1)' : 'scale(0.8)',\n  width: $expand ? '80vw' : 300,\n  height: $expand ? 'auto' : 150, \n}));\n\n\nexport default function ParsedDataContent({ expand, stocks }) {\n  let [stockData, setStockData] = React.useState([]);\n  let [keys, setKeys] = React.useState([]);\n\n  React.useEffect(() => {\n    let data = stocks.map(stock => ({\n      color: stock.color,\n      data: {\n        ...stock.quoteSummary['defaultKeyStatistics'],\n        ...stock.quoteSummary['financialData']\n      }\n    }));\n    let keySet = new Set();\n    data.forEach(({ data }) =>\n      Object.keys(data).forEach(key =>\n        keySet.add(key)\n      )\n    )\n    //console.log(\"keySet:\", keySet)\n    data.forEach(data => delete data.maxAge);\n    setStockData([...data]);\n    setKeys([...keySet]);\n  }, [stocks])\n\n\n  return <>\n    <StyledCardContent $expand={expand}>\n      <Grid container direction=\"row\" >\n        {keys.map(key =>\n          <Grid container item key={key} textAlign={'left'} xs={12} md={expand ? 6 : 12} xl={expand ? 3 : 12}>\n            <ParseDataPoint key={key} showLabel={true} label={key} />\n            {stockData.filter(stock => stock.data[key])\n              .map((stock, i) =>\n                <Stack direction=\"row\" spacing={0.7}>\n                  <ParseDataPoint key={i} color={stock.color} data={stock.data[key]} />\n                </Stack>\n              )}\n          </Grid>\n        )}\n      </Grid>\n    </StyledCardContent>\n  </>\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}