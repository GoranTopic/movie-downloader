{"ast":null,"code":"var _jsxFileName = \"/home/telix/movie-downloader/src/components/cardContent/ChartContent.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport CardContent from '@mui/material/CardContent';\nimport stylize from '../../utils/stylize.js';\n//import ChandleStickChart from '../charts/CandleStickChart.js';\n//import AreaChart from '../charts/AreaChart.js';\nimport LineChart from '../charts/LineChart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledCardContent = stylize(CardContent, _ref => {\n  let {\n    theme,\n    $expand\n  } = _ref;\n  return {\n    transition: theme.transitions.create(['transform', 'width', 'height'], {\n      duration: theme.transitions.duration.standard\n    }),\n    // auto does not allow css transitions, bummer.\n    // but auto is key so tidoesnot overflow in the phone size\n    textAlign: 'center',\n    justifyContent: 'stretch',\n    maxWidth: 1200,\n    transform: $expand ? 'scale(1)' : 'scale(0.8)',\n    width: $expand ? '85vw' : 300,\n    height: $expand ? '45vw' : 150\n  };\n});\n_c = StyledCardContent;\nexport default function ChartContent(_ref2) {\n  _s();\n  let {\n    expand,\n    stocks\n  } = _ref2;\n  // Use lightweight chart tutorial to complete the chart compnenet propertly updating the values\n  // https://tradingview.github.io/lightweight-charts/tutorials/react/advanced\n  let [candleStickData, setCandleStickData] = React.useState([]);\n  let [volumeData, setVolumeData] = React.useState([]);\n  let [areaData, setAreaData] = React.useState([]);\n  /* parse data from stocks */\n\n  React.useEffect(() => {\n    stocks.forEach(stock => {\n      let newCandleStickData = [];\n      let newVolumeData = [];\n      let newAreaData = [];\n      /* parse data from stocks */\n      let {\n        timestamp,\n        indicators\n      } = stock.stockChart;\n      // get the stocks indicators \n      let {\n        open,\n        close,\n        high,\n        low,\n        volume\n      } = indicators.quote[0];\n      // parse data\n      timestamp.forEach((time, i) => {\n        // candle stick data\n        newCandleStickData.push({\n          time: time,\n          open: open[i],\n          close: close[i],\n          high: high[i],\n          low: low[i]\n        });\n        // volume data\n        newVolumeData.push({\n          time: time,\n          value: volume[i]\n        });\n        // area data\n        newAreaData.push({\n          time: time,\n          value: high[i]\n        });\n      });\n      setCandleStickData([...candleStickData, newCandleStickData]);\n      setVolumeData([...volumeData, newVolumeData]);\n      setAreaData([...areaData, {\n        ...stock,\n        data: newAreaData\n      }]);\n    });\n  }, [stocks]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledCardContent, {\n      $expand: expand,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        stocks: areaData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(ChartContent, \"BzD9gzOD0KWaTSOn68ivhQnvy6M=\");\n_c2 = ChartContent;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledCardContent\");\n$RefreshReg$(_c2, \"ChartContent\");","map":{"version":3,"names":["React","CardContent","stylize","LineChart","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledCardContent","_ref","theme","$expand","transition","transitions","create","duration","standard","textAlign","justifyContent","maxWidth","transform","width","height","_c","ChartContent","_ref2","_s","expand","stocks","candleStickData","setCandleStickData","useState","volumeData","setVolumeData","areaData","setAreaData","useEffect","forEach","stock","newCandleStickData","newVolumeData","newAreaData","timestamp","indicators","stockChart","open","close","high","low","volume","quote","time","i","push","value","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/telix/movie-downloader/src/components/cardContent/ChartContent.js"],"sourcesContent":["import * as React from 'react';\nimport CardContent from '@mui/material/CardContent';\nimport stylize from '../../utils/stylize.js'\n//import ChandleStickChart from '../charts/CandleStickChart.js';\n//import AreaChart from '../charts/AreaChart.js';\nimport LineChart from '../charts/LineChart.js';\n\nconst StyledCardContent = stylize(CardContent, ({ theme, $expand }) => ({\n  transition: theme.transitions.create(['transform', 'width', 'height'], {\n    duration: theme.transitions.duration.standard,\n  }),\n  // auto does not allow css transitions, bummer.\n  // but auto is key so tidoesnot overflow in the phone size\n  textAlign: 'center',\n  justifyContent: 'stretch',\n  maxWidth: 1200,\n  transform: $expand ? 'scale(1)' : 'scale(0.8)',\n  width: $expand ? '85vw' : 300,\n  height: $expand ? '45vw' : 150,\n}));\n\nexport default function ChartContent({ expand, stocks }) {\n  // Use lightweight chart tutorial to complete the chart compnenet propertly updating the values\n  // https://tradingview.github.io/lightweight-charts/tutorials/react/advanced\n      let [candleStickData, setCandleStickData] = React.useState([]);\n      let [volumeData, setVolumeData]  = React.useState([]);\n      let [areaData, setAreaData] = React.useState([]);\n      /* parse data from stocks */\n\n  React.useEffect(() => {\n    stocks.forEach(stock => {\n      let newCandleStickData = [];\n      let newVolumeData = [];\n      let newAreaData = [];\n      /* parse data from stocks */\n      let { timestamp, indicators } = stock.stockChart;\n      // get the stocks indicators \n      let { open, close, high, low, volume } = indicators.quote[0];\n      // parse data\n      timestamp.forEach((time, i) => {\n        // candle stick data\n        newCandleStickData.push({ time: time, open: open[i], close: close[i], high: high[i], low: low[i] });\n        // volume data\n        newVolumeData.push({ time: time, value: volume[i] });\n        // area data\n        newAreaData.push({ time: time, value: high[i] });\n      });\n      setCandleStickData([...candleStickData, newCandleStickData]);\n      setVolumeData([...volumeData, newVolumeData]);\n      setAreaData([...areaData, {...stock, data: newAreaData}]);\n    })\n  }, [stocks]);\n\n  return <>\n    <StyledCardContent $expand={expand}>\n      {\n        //false ?  ((candleStickData && volumeData) ? <ChandleStickChart candleStickData={candleStickData} volumeData={volumeData} /> : <></>) : (areaData.length? <AreaChart areaData={areaData} /> : <></>)\n      }\n      <LineChart stocks={areaData} />\n    </StyledCardContent>\n  </>\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}