{"ast":null,"code":"import { CrosshairMode } from \"lightweight-charts\";\nconst resizesChart = (resizeObserver, chart, chartContainerRef) => () => {\n  resizeObserver.current = new ResizeObserver(entries => {\n    // we get the curret height and width of the objsevaable container\n    const {\n      width,\n      height\n    } = entries[0].contentRect;\n    // apply it to the chart\n    chart.current.applyOptions({\n      width,\n      height\n    });\n    // make a time out so it looks smoother?\n    setTimeout(() => {\n      chart.current.timeScale().fitContent();\n    }, 0);\n  });\n  resizeObserver.current.observe(chartContainerRef.current);\n  return () => resizeObserver.current.disconnect();\n};\nconst options = chartContainerRef => ({\n  width: chartContainerRef.current.clientWidth,\n  height: chartContainerRef.current.clientHeight,\n  layout: {\n    backgroundColor: \"#253248\",\n    textColor: \"rgba(255, 255, 255, 0.9)\"\n  },\n  grid: {\n    vertLines: {\n      color: \"#334158\"\n    },\n    horzLines: {\n      color: \"#334158\"\n    }\n  },\n  crosshair: {\n    mode: CrosshairMode.Normal\n  },\n  priceScale: {\n    borderColor: \"#485c7b\"\n  },\n  timeScale: {\n    borderColor: \"#485c7b\"\n  }\n});\nexport { resizesChart, options };","map":{"version":3,"names":["CrosshairMode","resizesChart","resizeObserver","chart","chartContainerRef","current","ResizeObserver","entries","width","height","contentRect","applyOptions","setTimeout","timeScale","fitContent","observe","disconnect","options","clientWidth","clientHeight","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","crosshair","mode","Normal","priceScale","borderColor"],"sources":["/home/telix/movie-downloader/src/components/charts/utils.js"],"sourcesContent":["import { CrosshairMode } from \"lightweight-charts\";\n\nconst resizesChart = (resizeObserver, chart, chartContainerRef) => () => {\n    resizeObserver.current = new ResizeObserver(entries => {\n        // we get the curret height and width of the objsevaable container\n        const { width, height } = entries[0].contentRect;\n        // apply it to the chart\n        chart.current.applyOptions({ width, height });\n        // make a time out so it looks smoother?\n        setTimeout(() => {\n            chart.current.timeScale().fitContent();\n        }, 0);\n    });\n    resizeObserver.current.observe(chartContainerRef.current);\n    return () => resizeObserver.current.disconnect();\n}\n\n\nconst options = chartContainerRef => ({\n    width: chartContainerRef.current.clientWidth,\n    height: chartContainerRef.current.clientHeight,\n    layout: {\n        backgroundColor: \"#253248\",\n        textColor: \"rgba(255, 255, 255, 0.9)\"\n    },\n    grid: {\n        vertLines: {\n            color: \"#334158\"\n        },\n        horzLines: {\n            color: \"#334158\"\n        }\n    },\n    crosshair: {\n        mode: CrosshairMode.Normal\n    },\n    priceScale: {\n        borderColor: \"#485c7b\"\n    },\n    timeScale: {\n        borderColor: \"#485c7b\"\n    }\n});\n\nexport { resizesChart, options}"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAElD,MAAMC,YAAY,GAAGA,CAACC,cAAc,EAAEC,KAAK,EAAEC,iBAAiB,KAAK,MAAM;EACrEF,cAAc,CAACG,OAAO,GAAG,IAAIC,cAAc,CAACC,OAAO,IAAI;IACnD;IACA,MAAM;MAAEC,KAAK;MAAEC;IAAO,CAAC,GAAGF,OAAO,CAAC,CAAC,CAAC,CAACG,WAAW;IAChD;IACAP,KAAK,CAACE,OAAO,CAACM,YAAY,CAAC;MAAEH,KAAK;MAAEC;IAAO,CAAC,CAAC;IAC7C;IACAG,UAAU,CAAC,MAAM;MACbT,KAAK,CAACE,OAAO,CAACQ,SAAS,EAAE,CAACC,UAAU,EAAE;IAC1C,CAAC,EAAE,CAAC,CAAC;EACT,CAAC,CAAC;EACFZ,cAAc,CAACG,OAAO,CAACU,OAAO,CAACX,iBAAiB,CAACC,OAAO,CAAC;EACzD,OAAO,MAAMH,cAAc,CAACG,OAAO,CAACW,UAAU,EAAE;AACpD,CAAC;AAGD,MAAMC,OAAO,GAAGb,iBAAiB,KAAK;EAClCI,KAAK,EAAEJ,iBAAiB,CAACC,OAAO,CAACa,WAAW;EAC5CT,MAAM,EAAEL,iBAAiB,CAACC,OAAO,CAACc,YAAY;EAC9CC,MAAM,EAAE;IACJC,eAAe,EAAE,SAAS;IAC1BC,SAAS,EAAE;EACf,CAAC;EACDC,IAAI,EAAE;IACFC,SAAS,EAAE;MACPC,KAAK,EAAE;IACX,CAAC;IACDC,SAAS,EAAE;MACPD,KAAK,EAAE;IACX;EACJ,CAAC;EACDE,SAAS,EAAE;IACPC,IAAI,EAAE5B,aAAa,CAAC6B;EACxB,CAAC;EACDC,UAAU,EAAE;IACRC,WAAW,EAAE;EACjB,CAAC;EACDlB,SAAS,EAAE;IACPkB,WAAW,EAAE;EACjB;AACJ,CAAC,CAAC;AAEF,SAAS9B,YAAY,EAAEgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}