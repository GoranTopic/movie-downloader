{"ast":null,"code":"import axios from 'axios';\n//import doenv from 'dotenv';\n//doenv.config();\n\n// cors proxy\n//var server = 'http://147.182.241.239:4236';\nvar server = 'http://localhost:4237';\n\n// super secret token, don't share =P \nvar token = '5df54d2d-26d0-43ce-aef1-34d71e0b0dbb';\n\n// print env variables\n//console.log(process.env)\n\nconst transmision_add_torrent = async (suggestion, torrent) => {\n  // this function will add a torrent to the transmission server\n  // it will return true if the torrent was added successfully\n  console.log(\"quering movie:\", suggestion);\n  console.log(\"torrent:\", torrent);\n  // send the request to add a toreent to the transmission server\n  let res = await axios.post(`${server}/yify/add`, {\n    movie_id: suggestion.id,\n    quality: torrent,\n    token: token\n  });\n  if (res.status === 'ok') return true;else return false;\n};\nconst query_torrents = async () =>\n// this function will query the transmission server for the list of torrents\n// it will return the list of torrents\nawait axios.get(`${server}/torrents`, {\n  token: token\n}).then(res => res.data).catch(err => console.log(err));\nconst query_disk = async () =>\n// this function will query the transmission server the disk space left\nawait axios.get(`${server}/disk`, {\n  token: token\n}).then(res => res.data).catch(err => console.log(err));\nexport { transmision_add_torrent, query_torrents, query_disk };","map":{"version":3,"names":["axios","server","token","transmision_add_torrent","suggestion","torrent","console","log","res","post","movie_id","id","quality","status","query_torrents","get","then","data","catch","err","query_disk"],"sources":["/home/telix/movie-downloader/frontend/src/transmission-cli.js"],"sourcesContent":["import axios from 'axios';\n//import doenv from 'dotenv';\n//doenv.config();\n\n// cors proxy\n//var server = 'http://147.182.241.239:4236';\nvar server = 'http://localhost:4237';\n\n\n// super secret token, don't share =P \nvar token = '5df54d2d-26d0-43ce-aef1-34d71e0b0dbb';\n\n// print env variables\n//console.log(process.env)\n\nconst transmision_add_torrent = async (suggestion, torrent) => {\n  // this function will add a torrent to the transmission server\n  // it will return true if the torrent was added successfully\n  console.log(\"quering movie:\", suggestion)\n  console.log(\"torrent:\", torrent)\n  // send the request to add a toreent to the transmission server\n  let res = await axios.post(`${server}/yify/add`, {\n    movie_id: suggestion.id,\n    quality: torrent,\n    token: token,\n  })\n  if (res.status === 'ok')\n    return true;\n  else\n    return false;\n}\n\nconst query_torrents = async () =>\n  // this function will query the transmission server for the list of torrents\n  // it will return the list of torrents\n  await axios\n    .get(`${server}/torrents`, {\n      token: token,\n    })\n    .then(res => res.data)\n    .catch(err => console.log(err))\n\n\nconst query_disk = async () =>\n  // this function will query the transmission server the disk space left\n  await axios\n    .get(`${server}/disk`, {\n      token: token,\n    })\n    .then(res => res.data)\n    .catch(err => console.log(err))\n\nexport { transmision_add_torrent, query_torrents, query_disk } "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;;AAEA;AACA;AACA,IAAIC,MAAM,GAAG,uBAAuB;;AAGpC;AACA,IAAIC,KAAK,GAAG,sCAAsC;;AAElD;AACA;;AAEA,MAAMC,uBAAuB,GAAG,MAAAA,CAAOC,UAAU,EAAEC,OAAO,KAAK;EAC7D;EACA;EACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,UAAU,CAAC;EACzCE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,OAAO,CAAC;EAChC;EACA,IAAIG,GAAG,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAE,GAAER,MAAO,WAAU,EAAE;IAC/CS,QAAQ,EAAEN,UAAU,CAACO,EAAE;IACvBC,OAAO,EAAEP,OAAO;IAChBH,KAAK,EAAEA;EACT,CAAC,CAAC;EACF,IAAIM,GAAG,CAACK,MAAM,KAAK,IAAI,EACrB,OAAO,IAAI,CAAC,KAEZ,OAAO,KAAK;AAChB,CAAC;AAED,MAAMC,cAAc,GAAG,MAAAA,CAAA;AACrB;AACA;AACA,MAAMd,KAAK,CACRe,GAAG,CAAE,GAAEd,MAAO,WAAU,EAAE;EACzBC,KAAK,EAAEA;AACT,CAAC,CAAC,CACDc,IAAI,CAACR,GAAG,IAAIA,GAAG,CAACS,IAAI,CAAC,CACrBC,KAAK,CAACC,GAAG,IAAIb,OAAO,CAACC,GAAG,CAACY,GAAG,CAAC,CAAC;AAGnC,MAAMC,UAAU,GAAG,MAAAA,CAAA;AACjB;AACA,MAAMpB,KAAK,CACRe,GAAG,CAAE,GAAEd,MAAO,OAAM,EAAE;EACrBC,KAAK,EAAEA;AACT,CAAC,CAAC,CACDc,IAAI,CAACR,GAAG,IAAIA,GAAG,CAACS,IAAI,CAAC,CACrBC,KAAK,CAACC,GAAG,IAAIb,OAAO,CAACC,GAAG,CAACY,GAAG,CAAC,CAAC;AAEnC,SAAShB,uBAAuB,EAAEW,cAAc,EAAEM,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}