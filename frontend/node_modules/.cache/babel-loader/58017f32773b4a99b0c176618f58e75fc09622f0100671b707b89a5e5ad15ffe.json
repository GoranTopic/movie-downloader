{"ast":null,"code":"var _jsxFileName = \"/home/telix/movie-downloader/src/components/cards/KeyStadistics.js\";\nimport ExpandablePaper from '../ExpandableCard.js';\nimport ParsedDataContent from '../cardContent/ParsedDataContent.js';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function KeyStadistics(_ref) {\n  let {\n    stocks\n  } = _ref;\n  /* check if stock has default key stadistics,\n  takes in a list of stocks as a parameter, filter out all but the active ones */\n  const title = 'Finanacial Stadistics';\n  // stock that we dont want to render\n  const stockFilter = stock => {\n    var _stock$quoteSummary, _stock$quoteSummary2;\n    return stock.active &&\n    // if it is not active, \n    stock.quoteSummary && ( // if it does not have quotesummery\n    stock === null || stock === void 0 ? void 0 : (_stock$quoteSummary = stock.quoteSummary) === null || _stock$quoteSummary === void 0 ? void 0 : _stock$quoteSummary.defaultKeyStatistics) && ( // if ti does not have key Stadistics\n    stock === null || stock === void 0 ? void 0 : (_stock$quoteSummary2 = stock.quoteSummary) === null || _stock$quoteSummary2 === void 0 ? void 0 : _stock$quoteSummary2.financialData) // if it does not have the fiancial data\n    ;\n  };\n  // filter stocks that are active and have a defaultKey Stadistics\n  const activeStocks = stocks.filter(stockFilter);\n  const subheader = `${activeStocks.map(s => s.shortname).join(', ')}'s financial Statistics`;\n\n  // if not active stocks\n  if (activeStocks.length === 0) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  // or if we have the data for it\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ExpandablePaper, {\n      stocks: activeStocks,\n      title: title,\n      subheader: subheader,\n      children: /*#__PURE__*/_jsxDEV(ParsedDataContent, {\n        stocks: activeStocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = KeyStadistics;\nvar _c;\n$RefreshReg$(_c, \"KeyStadistics\");","map":{"version":3,"names":["ExpandablePaper","ParsedDataContent","Fragment","_Fragment","jsxDEV","_jsxDEV","KeyStadistics","_ref","stocks","title","stockFilter","stock","_stock$quoteSummary","_stock$quoteSummary2","active","quoteSummary","defaultKeyStatistics","financialData","activeStocks","filter","subheader","map","s","shortname","join","length","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/telix/movie-downloader/src/components/cards/KeyStadistics.js"],"sourcesContent":["import ExpandablePaper from '../ExpandableCard.js';\nimport ParsedDataContent from '../cardContent/ParsedDataContent.js';\n\nexport default function KeyStadistics({ stocks }) {\n    /* check if stock has default key stadistics,\n    takes in a list of stocks as a parameter, filter out all but the active ones */\n    const title = 'Finanacial Stadistics';\n    // stock that we dont want to render\n    const stockFilter = stock => (\n        stock.active && // if it is not active, \n        stock.quoteSummary && // if it does not have quotesummery\n        stock?.quoteSummary?.defaultKeyStatistics && // if ti does not have key Stadistics\n        stock?.quoteSummary?.financialData // if it does not have the fiancial data\n    )\n    // filter stocks that are active and have a defaultKey Stadistics\n    const activeStocks = stocks.filter(stockFilter);\n    const subheader = `${activeStocks.map(s => s.shortname).join(', ')}'s financial Statistics`;\n\n    // if not active stocks\n    if (activeStocks.length === 0) return <></>\n    // or if we have the data for it\n    return <>\n        <ExpandablePaper stocks={activeStocks} title={title} subheader={subheader} >\n            <ParsedDataContent stocks={activeStocks} />\n        </ExpandablePaper>\n    </>\n}"],"mappings":";AAAA,OAAOA,eAAe,MAAM,sBAAsB;AAClD,OAAOC,iBAAiB,MAAM,qCAAqC;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpE,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAAa;EAAA,IAAZ;IAAEC;EAAO,CAAC,GAAAD,IAAA;EAC5C;AACJ;EACI,MAAME,KAAK,GAAG,uBAAuB;EACrC;EACA,MAAMC,WAAW,GAAGC,KAAK;IAAA,IAAAC,mBAAA,EAAAC,oBAAA;IAAA,OACrBF,KAAK,CAACG,MAAM;IAAI;IAChBH,KAAK,CAACI,YAAY,MAAI;IACtBJ,KAAK,aAALA,KAAK,wBAAAC,mBAAA,GAALD,KAAK,CAAEI,YAAY,cAAAH,mBAAA,uBAAnBA,mBAAA,CAAqBI,oBAAoB,OAAI;IAC7CL,KAAK,aAALA,KAAK,wBAAAE,oBAAA,GAALF,KAAK,CAAEI,YAAY,cAAAF,oBAAA,uBAAnBA,oBAAA,CAAqBI,aAAa,EAAC;IAAA;EAAA,CACtC;EACD;EACA,MAAMC,YAAY,GAAGV,MAAM,CAACW,MAAM,CAACT,WAAW,CAAC;EAC/C,MAAMU,SAAS,GAAI,GAAEF,YAAY,CAACG,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,CAAC,CAACC,IAAI,CAAC,IAAI,CAAE,yBAAwB;;EAE3F;EACA,IAAIN,YAAY,CAACO,MAAM,KAAK,CAAC,EAAE,oBAAOpB,OAAA,CAAAF,SAAA,oBAAK;EAC3C;EACA,oBAAOE,OAAA,CAAAF,SAAA;IAAAuB,QAAA,eACHrB,OAAA,CAACL,eAAe;MAACQ,MAAM,EAAEU,YAAa;MAACT,KAAK,EAAEA,KAAM;MAACW,SAAS,EAAEA,SAAU;MAAAM,QAAA,eACtErB,OAAA,CAACJ,iBAAiB;QAACO,MAAM,EAAEU;MAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC7B,iBACnB;AACP;AAACC,EAAA,GAvBuBzB,aAAa;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}