{"ast":null,"code":"import axios from 'axios';\n//import doenv from 'dotenv';\n//doenv.config();\n\n// cors proxy\nvar server = 'http://147.182.241.239:4236';\n\n// super secret token, don't share =P \nvar token = '5df54d2d-26d0-43ce-aef1-34d71e0b0dbb';\n\n// print env variables\nconsole.log(process.env);\nconst transmision_add_torrent = async (suggestion, torrent) => {\n  // this function will add a torrent to the transmission server\n  // it will return true if the torrent was added successfully\n  console.log(\"quering movie:\", suggestion);\n  console.log(\"torrent:\", torrent.quality);\n  // send the request to add a toreent to the transmission server\n  let res = await axios.post(`${server}/yify/add`, {\n    movie_id: suggestion.id,\n    quality: torrent.quality,\n    token: token\n  });\n  if (res.status === 'ok') return true;else return false;\n};\nconst query_torrents = async () =>\n// this function will query the transmission server for the list of torrents\n// it will return the list of torrents\nawait axios.get(`${server}/torrents`, {\n  token: token\n});\nconst query_disk = async () =>\n// this function will query the transmission server the disk space left\nawait axios.get(`${server}/disk`, {\n  token: token\n});\nexport { transmision_add_torrent, query_torrents, query_disk };","map":{"version":3,"names":["axios","server","token","console","log","process","env","transmision_add_torrent","suggestion","torrent","quality","res","post","movie_id","id","status","query_torrents","get","query_disk"],"sources":["/home/telix/movie-downloader/frontend/src/transmission-cli.js"],"sourcesContent":["import axios from 'axios';\n//import doenv from 'dotenv';\n//doenv.config();\n\n// cors proxy\nvar server = 'http://147.182.241.239:4236';\n\n// super secret token, don't share =P \nvar token = '5df54d2d-26d0-43ce-aef1-34d71e0b0dbb';\n\n// print env variables\nconsole.log(process.env)\n\nconst transmision_add_torrent = async (suggestion, torrent) => {\n  // this function will add a torrent to the transmission server\n  // it will return true if the torrent was added successfully\n  console.log(\"quering movie:\", suggestion)\n  console.log(\"torrent:\", torrent.quality)\n  // send the request to add a toreent to the transmission server\n  let res = await axios.post(`${server}/yify/add`, {\n    movie_id: suggestion.id,\n    quality: torrent.quality,\n    token: token,\n  })\n  if (res.status === 'ok')\n    return true;\n  else\n    return false;\n}\n\nconst query_torrents = async () =>\n  // this function will query the transmission server for the list of torrents\n  // it will return the list of torrents\n  await axios.get(`${server}/torrents`, {\n    token: token,\n  })\n\nconst query_disk = async () =>\n  // this function will query the transmission server the disk space left\n  await axios.get(`${server}/disk`, {\n    token: token,\n  })\n\nexport { transmision_add_torrent, query_torrents, query_disk } "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;;AAEA;AACA,IAAIC,MAAM,GAAG,6BAA6B;;AAE1C;AACA,IAAIC,KAAK,GAAG,sCAAsC;;AAElD;AACAC,OAAO,CAACC,GAAG,CAACC,OAAO,CAACC,GAAG,CAAC;AAExB,MAAMC,uBAAuB,GAAG,MAAAA,CAAOC,UAAU,EAAEC,OAAO,KAAK;EAC7D;EACA;EACAN,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEI,UAAU,CAAC;EACzCL,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEK,OAAO,CAACC,OAAO,CAAC;EACxC;EACA,IAAIC,GAAG,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAE,GAAEX,MAAO,WAAU,EAAE;IAC/CY,QAAQ,EAAEL,UAAU,CAACM,EAAE;IACvBJ,OAAO,EAAED,OAAO,CAACC,OAAO;IACxBR,KAAK,EAAEA;EACT,CAAC,CAAC;EACF,IAAIS,GAAG,CAACI,MAAM,KAAK,IAAI,EACrB,OAAO,IAAI,CAAC,KAEZ,OAAO,KAAK;AAChB,CAAC;AAED,MAAMC,cAAc,GAAG,MAAAA,CAAA;AACrB;AACA;AACA,MAAMhB,KAAK,CAACiB,GAAG,CAAE,GAAEhB,MAAO,WAAU,EAAE;EACpCC,KAAK,EAAEA;AACT,CAAC,CAAC;AAEJ,MAAMgB,UAAU,GAAG,MAAAA,CAAA;AACjB;AACA,MAAMlB,KAAK,CAACiB,GAAG,CAAE,GAAEhB,MAAO,OAAM,EAAE;EAChCC,KAAK,EAAEA;AACT,CAAC,CAAC;AAEJ,SAASK,uBAAuB,EAAES,cAAc,EAAEE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}