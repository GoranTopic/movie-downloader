{"ast":null,"code":"import axios from 'axios';\nimport { YifyService } from 'yify-api';\nconst yifyService = new YifyService();\n\n// \nconst endpoint = 'https://yts.lt/api/v2/';\n\n// server address\nlet cors_proxy = 'http://147.182.241.239:4236';\n\n// super secret token, don't share =P\nlet token = '5df54d27-26d0-43ce-aef1-34d71e0b0dbb';\nconst query_movie_suggestions = async key => {\n  try {\n    const {\n      data\n    } = await axios.get(`${cors_proxy}/${endpoint}/list_movies.json`, {\n      params: {\n        query_term: key\n      },\n      headers: {\n        token\n      } // token for the cors proxy\n    });\n\n    if (data.status === 'ok') if (data.data.movies) return data.data.movies;else return [];\n    throw new Error(data.status_message);\n  } catch (err) {\n    console.error(err);\n    throw new Error('Something went wrong');\n  }\n};\nconst get_torrent_url = async movie_id => await axios.get(`${cors_proxy}/${endpoint}/list_movies.json`, {\n  params: {\n    movie_id: movie_id,\n    with_images: true\n  },\n  headers: {\n    token\n  } // token for the cors proxy\n}).then(response => {\n  console.log(response);\n  let movie = response.data.movie;\n  let torrent = movie.torrents.filter(t => t.quality === '1080p')[0];\n  return torrent;\n}).catch(e => console.error(e));\nexport { query_movie_suggestions, get_torrent_url };","map":{"version":3,"names":["axios","YifyService","yifyService","endpoint","cors_proxy","token","query_movie_suggestions","key","data","get","params","query_term","headers","status","movies","Error","status_message","err","console","error","get_torrent_url","movie_id","with_images","then","response","log","movie","torrent","torrents","filter","t","quality","catch","e"],"sources":["/home/telix/movie-downloader/src/yify-cli.js"],"sourcesContent":["import axios from 'axios';\nimport { YifyService } from 'yify-api';\n\nconst yifyService = new YifyService()\n\n// \nconst endpoint = 'https://yts.lt/api/v2/';\n\n// server address\nlet cors_proxy = 'http://147.182.241.239:4236';\n\n// super secret token, don't share =P\nlet token = '5df54d27-26d0-43ce-aef1-34d71e0b0dbb';\n\nconst query_movie_suggestions = async key => {\n  try {\n    const { data } = await axios\n      .get(`${cors_proxy}/${endpoint}/list_movies.json`, {\n        params: { query_term: key },\n        headers: { token } // token for the cors proxy\n      })\n    if (data.status === 'ok')\n      if (data.data.movies)\n        return data.data.movies;\n      else\n        return []\n    throw new Error(data.status_message);\n  } catch (err) {\n    console.error(err)\n    throw new Error('Something went wrong');\n  }\n}\n\nconst get_torrent_url = async movie_id =>\n  await axios\n    .get(`${cors_proxy}/${endpoint}/list_movies.json`, {\n      params: {\n        movie_id: movie_id,\n        with_images: true,\n      },\n      headers: { token } // token for the cors proxy\n    })\n    .then(response => {\n      console.log(response);\n      let movie = response.data.movie;\n      let torrent = movie.torrents.filter(\n        t => t.quality === '1080p'\n      )[0]\n      return torrent\n    })\n    .catch(e => console.error(e))\n\nexport { query_movie_suggestions, get_torrent_url }\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,UAAU;AAEtC,MAAMC,WAAW,GAAG,IAAID,WAAW,EAAE;;AAErC;AACA,MAAME,QAAQ,GAAG,wBAAwB;;AAEzC;AACA,IAAIC,UAAU,GAAG,6BAA6B;;AAE9C;AACA,IAAIC,KAAK,GAAG,sCAAsC;AAElD,MAAMC,uBAAuB,GAAG,MAAMC,GAAG,IAAI;EAC3C,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,KAAK,CACzBS,GAAG,CAAE,GAAEL,UAAW,IAAGD,QAAS,mBAAkB,EAAE;MACjDO,MAAM,EAAE;QAAEC,UAAU,EAAEJ;MAAI,CAAC;MAC3BK,OAAO,EAAE;QAAEP;MAAM,CAAC,CAAC;IACrB,CAAC,CAAC;;IACJ,IAAIG,IAAI,CAACK,MAAM,KAAK,IAAI,EACtB,IAAIL,IAAI,CAACA,IAAI,CAACM,MAAM,EAClB,OAAON,IAAI,CAACA,IAAI,CAACM,MAAM,CAAC,KAExB,OAAO,EAAE;IACb,MAAM,IAAIC,KAAK,CAACP,IAAI,CAACQ,cAAc,CAAC;EACtC,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClB,MAAM,IAAIF,KAAK,CAAC,sBAAsB,CAAC;EACzC;AACF,CAAC;AAED,MAAMK,eAAe,GAAG,MAAMC,QAAQ,IACpC,MAAMrB,KAAK,CACRS,GAAG,CAAE,GAAEL,UAAW,IAAGD,QAAS,mBAAkB,EAAE;EACjDO,MAAM,EAAE;IACNW,QAAQ,EAAEA,QAAQ;IAClBC,WAAW,EAAE;EACf,CAAC;EACDV,OAAO,EAAE;IAAEP;EAAM,CAAC,CAAC;AACrB,CAAC,CAAC,CACDkB,IAAI,CAACC,QAAQ,IAAI;EAChBN,OAAO,CAACO,GAAG,CAACD,QAAQ,CAAC;EACrB,IAAIE,KAAK,GAAGF,QAAQ,CAAChB,IAAI,CAACkB,KAAK;EAC/B,IAAIC,OAAO,GAAGD,KAAK,CAACE,QAAQ,CAACC,MAAM,CACjCC,CAAC,IAAIA,CAAC,CAACC,OAAO,KAAK,OAAO,CAC3B,CAAC,CAAC,CAAC;EACJ,OAAOJ,OAAO;AAChB,CAAC,CAAC,CACDK,KAAK,CAACC,CAAC,IAAIf,OAAO,CAACC,KAAK,CAACc,CAAC,CAAC,CAAC;AAEjC,SAAS3B,uBAAuB,EAAEc,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}