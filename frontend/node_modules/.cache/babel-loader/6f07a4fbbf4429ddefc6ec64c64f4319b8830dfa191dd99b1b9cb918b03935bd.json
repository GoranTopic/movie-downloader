{"ast":null,"code":"var _jsxFileName = \"/home/telix/movie-downloader/frontend/src/components/TrasnmissionList.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\n//import TorrentCard from './TorrentCard.js';\nimport Grid from '@mui/material/Grid';\nimport { query_torrents } from '../transmission-cli.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TrasnmissionList() {\n  _s();\n  /* this is a coponent that will be used to show the torrents and their status frmo the Trasnmission-remote client */\n  const [torrents, seTorrents] = React.useState([]);\n  // would this be loagin if there are no query result?\n\n  React.useEffect(() => {\n    /* as soon as the compnent loads,\n     * lets query transimission-remote for the list of torrents */\n    // return empty list of now \n    setInterval(async () => {\n      // query the transmission server for the list of torrents\n      let new_torrents = await query_torrents();\n      console.log(\"torrents:\", new_torrents);\n      seTorrents(new_torrents);\n    }, 20000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      columns: {\n        xs: 1,\n        sm: 1,\n        md: 12,\n        lg: 12,\n        xl: 14\n      },\n      direction: \"row\",\n      justifyContent: \"space-evenly\",\n      rowSpacing: 5,\n      children: torrents.map(torrent => /*#__PURE__*/_jsxDEV(TorrentCard, {\n        torrent: torrent,\n        deleteTorrent: deleteTorrent,\n        downloadTorrent: downloadTorrent\n      }, torrent.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(TrasnmissionList, \"dtaPZxQhPbYETehSZEQXuNwYmUM=\");\n_c = TrasnmissionList;\nvar _c;\n$RefreshReg$(_c, \"TrasnmissionList\");","map":{"version":3,"names":["React","Grid","query_torrents","jsxDEV","_jsxDEV","Fragment","_Fragment","TrasnmissionList","_s","torrents","seTorrents","useState","useEffect","setInterval","new_torrents","console","log","children","container","columns","xs","sm","md","lg","xl","direction","justifyContent","rowSpacing","map","torrent","TorrentCard","deleteTorrent","downloadTorrent","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/telix/movie-downloader/frontend/src/components/TrasnmissionList.js"],"sourcesContent":["import * as React from 'react';\n//import TorrentCard from './TorrentCard.js';\nimport Grid from '@mui/material/Grid';\nimport { query_torrents } from '../transmission-cli.js';\n\nexport default function TrasnmissionList() {\n  /* this is a coponent that will be used to show the torrents and their status frmo the Trasnmission-remote client */\n    const [torrents, seTorrents] = React.useState([]);\n  // would this be loagin if there are no query result?\n\n    React.useEffect(() => {\n        /* as soon as the compnent loads,\n         * lets query transimission-remote for the list of torrents */\n        // return empty list of now \n        setInterval(async () => {\n            // query the transmission server for the list of torrents\n            let new_torrents = await query_torrents();\n            console.log(\"torrents:\", new_torrents);\n            seTorrents(new_torrents);\n        }, 20000);\n    }, []);\n\n    return <>\n        <Grid container columns={{ xs: 1, sm: 1, md: 12, lg: 12, xl: 14 }}\n            direction=\"row\" justifyContent=\"space-evenly\"\n            rowSpacing={5}>\n            { /* for each torrent map to torent card */}\n            {torrents.map(torrent => <TorrentCard\n                key={torrent.id}\n                torrent={torrent}\n                deleteTorrent={deleteTorrent}\n                downloadTorrent={downloadTorrent}\n            />\n            )}\n        </Grid>\n    </>\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B;AACA,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACzC;EACE,MAAM,CAACC,QAAQ,EAAEC,UAAU,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAC,EAAE,CAAC;EACnD;;EAEEX,KAAK,CAACY,SAAS,CAAC,MAAM;IAClB;AACR;IACQ;IACAC,WAAW,CAAC,YAAY;MACpB;MACA,IAAIC,YAAY,GAAG,MAAMZ,cAAc,EAAE;MACzCa,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,YAAY,CAAC;MACtCJ,UAAU,CAACI,YAAY,CAAC;IAC5B,CAAC,EAAE,KAAK,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOV,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACHb,OAAA,CAACH,IAAI;MAACiB,SAAS;MAACC,OAAO,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEC,EAAE,EAAE,CAAC;QAAEC,EAAE,EAAE,EAAE;QAAEC,EAAE,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAG,CAAE;MAC9DC,SAAS,EAAC,KAAK;MAACC,cAAc,EAAC,cAAc;MAC7CC,UAAU,EAAE,CAAE;MAAAV,QAAA,EAEbR,QAAQ,CAACmB,GAAG,CAACC,OAAO,iBAAIzB,OAAA,CAAC0B,WAAW;QAEjCD,OAAO,EAAEA,OAAQ;QACjBE,aAAa,EAAEA,aAAc;QAC7BC,eAAe,EAAEA;MAAgB,GAH5BH,OAAO,CAACI,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAIjB;IACD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACE,iBACR;AACP;AAAC7B,EAAA,CA/BuBD,gBAAgB;AAAA+B,EAAA,GAAhB/B,gBAAgB;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}