{"ast":null,"code":"var _s = $RefreshSig$();\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nexport default function TorrentCard(_ref) {\n  _s();\n  let {\n    torrent\n  } = _ref;\n  // the torrent url to pass to the transmission client\n  const [isDone, setIsDone] = React.useState(false);\n  // set the 1080 torrent as the default as soon as it loads\n\n  const handleDownload = event => {\n    //setIsDone(event.target.value);\n  };\n  console.log(torrent);\n  return {/*\n          <Card sx={{ display: 'flex', padding: 12 }}>\n             <Box sx={{ display: 'flex', flexDirection: 'row' }}>\n                 <CardMedia\n                     component=\"img\"\n                     sx={{ width: 51 }}\n                     image={suggestion.small_cover_image}\n                     alt={suggestion.title}\n                 />\n                 <CardContent sx={{ flex: '1 0 auto' }}>\n                     <Typography component=\"div\" > {suggestion.title} </Typography>\n                     <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\n                         ({suggestion.year}) - {suggestion.rating} - {suggestion.language} -\n                         {suggestion.genres ? suggestion.genres.map(genre => genre + \" \") : \"\"}\n                     </Typography>\n                 </CardContent>\n                 <FormControl>\n                     <Box sx={{ display: 'flex', alignSelf: 'right', alignItems: 'center', pl: 1, pb: 1 }}>\n                         <RadioGroup column aria-label=\"quality\" name=\"quality\"\n                             onChange={e => handleChange(e)}\n                             defaultValue={torrentUrl}\n                             aria-labelledby=\"demo-form-control-label-placement\" >\n                             {suggestion.torrents.map(torrent =>\n                                 <FormControlLabel\n                                     key={torrent.url}\n                                     value={torrent.url}\n                                     size=\"small\"\n                                     label={<Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                                         <Typography variant=\"subtitle2\" fontSize={16} p={0.2}> {torrent.type} </Typography>\n                                         <Typography variant=\"subtitle2\" fontSize={16} p={0.2}> {torrent.quality} </Typography>\n                                         <Typography variant=\"subtitle2\" fontSize={16} p={0.2}> {torrent.size} </Typography>\n                                     </Box>}\n                                     labelPlacement=\"left\"\n                                     control={<Radio />}\n                                 />\n                             )}\n                         </RadioGroup>\n                         <IconButton aria-label=\"download\" onClick={() => selectTorrent(torrentUrl)}>\n                             <FileDownloadIcon sx={{ height: 38, width: 38 }} />\n                         </IconButton>\n                     </Box>\n                 </FormControl>\n             </Box>\n          </Card>\n                             */};\n}\n_s(TorrentCard, \"HYWL9zc5ybchE+IuBj/kTeNAANo=\");\n_c = TorrentCard;\nvar _c;\n$RefreshReg$(_c, \"TorrentCard\");","map":{"version":3,"names":["React","Box","Card","CardContent","CardMedia","IconButton","Typography","FileDownloadIcon","Radio","RadioGroup","FormControlLabel","FormControl","TorrentCard","_ref","_s","torrent","isDone","setIsDone","useState","handleDownload","event","console","log","_c","$RefreshReg$"],"sources":["/home/telix/movie-downloader/frontend/src/components/TorrentCard.js"],"sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\n\n\nexport default function TorrentCard({ torrent }) {\n    // the torrent url to pass to the transmission client\n    const [isDone, setIsDone] = React.useState(false);\n    // set the 1080 torrent as the default as soon as it loads\n\n    const handleDownload = event => {\n        //setIsDone(event.target.value);\n    };\n    console.log(torrent)\n\n    return (\n        {/*\n        <Card sx={{ display: 'flex', padding: 12 }}>\n            <Box sx={{ display: 'flex', flexDirection: 'row' }}>\n                <CardMedia\n                    component=\"img\"\n                    sx={{ width: 51 }}\n                    image={suggestion.small_cover_image}\n                    alt={suggestion.title}\n                />\n                <CardContent sx={{ flex: '1 0 auto' }}>\n                    <Typography component=\"div\" > {suggestion.title} </Typography>\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\n                        ({suggestion.year}) - {suggestion.rating} - {suggestion.language} -\n                        {suggestion.genres ? suggestion.genres.map(genre => genre + \" \") : \"\"}\n                    </Typography>\n                </CardContent>\n                <FormControl>\n                    <Box sx={{ display: 'flex', alignSelf: 'right', alignItems: 'center', pl: 1, pb: 1 }}>\n                        <RadioGroup column aria-label=\"quality\" name=\"quality\"\n                            onChange={e => handleChange(e)}\n                            defaultValue={torrentUrl}\n                            aria-labelledby=\"demo-form-control-label-placement\" >\n                            {suggestion.torrents.map(torrent =>\n                                <FormControlLabel\n                                    key={torrent.url}\n                                    value={torrent.url}\n                                    size=\"small\"\n                                    label={<Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                                        <Typography variant=\"subtitle2\" fontSize={16} p={0.2}> {torrent.type} </Typography>\n                                        <Typography variant=\"subtitle2\" fontSize={16} p={0.2}> {torrent.quality} </Typography>\n                                        <Typography variant=\"subtitle2\" fontSize={16} p={0.2}> {torrent.size} </Typography>\n                                    </Box>}\n                                    labelPlacement=\"left\"\n                                    control={<Radio />}\n                                />\n                            )}\n                        </RadioGroup>\n                        <IconButton aria-label=\"download\" onClick={() => selectTorrent(torrentUrl)}>\n                            <FileDownloadIcon sx={{ height: 38, width: 38 }} />\n                        </IconButton>\n                    </Box>\n                </FormControl>\n            </Box>\n        </Card>\n                            */}\n    );\n}"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,WAAW,MAAM,2BAA2B;AAGnD,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAAc;EAAAC,EAAA;EAAA,IAAb;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAC3C;EACA,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGjB,KAAK,CAACkB,QAAQ,CAAC,KAAK,CAAC;EACjD;;EAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;IAC5B;EAAA,CACH;EACDC,OAAO,CAACC,GAAG,CAACP,OAAO,CAAC;EAEpB,OACI,CAAC;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BA5CS,CA4CsB;AAE/B;AAACD,EAAA,CAzDuBF,WAAW;AAAAW,EAAA,GAAXX,WAAW;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}