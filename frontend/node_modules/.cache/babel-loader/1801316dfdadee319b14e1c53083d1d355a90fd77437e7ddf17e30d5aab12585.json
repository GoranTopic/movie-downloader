{"ast":null,"code":"var _jsxFileName = \"/home/telix/movie-downloader/frontend/src/components/TrasnmissionList.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\n//import TorrentCard from './TorrentCard.js';\nimport Grid from '@mui/material/Grid';\nimport { query_torrents } from '../transmission-cli.js';\nimport TorrentCard from './TorrentCard.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TrasnmissionList() {\n  _s();\n  /* this is a coponent that will be used to show the torrents and their status frmo the Trasnmission-remote client */\n  const [torrents, setTorrents] = React.useState([]);\n  // would this be loagin if there are no query result?\n\n  React.useEffect(() => {\n    /* as soon as the compnent loads,\n     * lets query transimission-remote for the list of torrents */\n    // return empty list of now \n    setInterval(async () => {\n      // query the transmission server for the list of torrents\n      let new_torrents = await query_torrents();\n      console.log(\"torrents:\", new_torrents);\n      setTorrents(new_torrents);\n    }, 20000);\n  }, []);\n\n  // delete torrent from transmission server\n  const deleteTorrent = async torrent_id => {\n    // delete the torrent from the transmission server\n    //let res = await trasmission_delete_torrent(torrent_id);\n    //console.log('res:', res);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      columns: {\n        xs: 1,\n        sm: 1,\n        md: 12,\n        lg: 12,\n        xl: 14\n      },\n      direction: \"row\",\n      justifyContent: \"space-evenly\",\n      rowSpacing: 5,\n      children: torrents.map(torrent => /*#__PURE__*/_jsxDEV(TorrentCard, {\n        torrent: torrent\n        //deleteTorrent={deleteTorrent}\n        //downloadTorrent={downloadTorrent}\n      }, torrent.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(TrasnmissionList, \"eImvJx94hzdIL0aq+tEyP2UUawc=\");\n_c = TrasnmissionList;\nvar _c;\n$RefreshReg$(_c, \"TrasnmissionList\");","map":{"version":3,"names":["React","Grid","query_torrents","TorrentCard","jsxDEV","_jsxDEV","Fragment","_Fragment","TrasnmissionList","_s","torrents","setTorrents","useState","useEffect","setInterval","new_torrents","console","log","deleteTorrent","torrent_id","children","container","columns","xs","sm","md","lg","xl","direction","justifyContent","rowSpacing","map","torrent","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/telix/movie-downloader/frontend/src/components/TrasnmissionList.js"],"sourcesContent":["import * as React from 'react';\n//import TorrentCard from './TorrentCard.js';\nimport Grid from '@mui/material/Grid';\nimport { query_torrents } from '../transmission-cli.js';\nimport TorrentCard from './TorrentCard.js';\n\nexport default function TrasnmissionList() {\n  /* this is a coponent that will be used to show the torrents and their status frmo the Trasnmission-remote client */\n    const [torrents, setTorrents] = React.useState([]);\n  // would this be loagin if there are no query result?\n\n    React.useEffect(() => {\n        /* as soon as the compnent loads,\n         * lets query transimission-remote for the list of torrents */\n        // return empty list of now \n        setInterval(async () => {\n            // query the transmission server for the list of torrents\n            let new_torrents = await query_torrents();\n            console.log(\"torrents:\", new_torrents);\n            setTorrents(new_torrents);\n        }, 20000);\n    }, []);\n\n    // delete torrent from transmission server\n    const deleteTorrent = async torrent_id => {\n        // delete the torrent from the transmission server\n        //let res = await trasmission_delete_torrent(torrent_id);\n        //console.log('res:', res);\n    }\n\n\n    return <>\n        <Grid container columns={{ xs: 1, sm: 1, md: 12, lg: 12, xl: 14 }}\n            direction=\"row\" justifyContent=\"space-evenly\"\n            rowSpacing={5}>\n            { /* for each torrent map to torent card */}\n            {torrents.map(torrent => <TorrentCard\n                key={torrent.id}\n                torrent={torrent}\n                //deleteTorrent={deleteTorrent}\n                //downloadTorrent={downloadTorrent}\n            />\n            )}\n        </Grid>\n    </>\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B;AACA,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,cAAc,QAAQ,wBAAwB;AACvD,OAAOC,WAAW,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACzC;EACE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;EACpD;;EAEEZ,KAAK,CAACa,SAAS,CAAC,MAAM;IAClB;AACR;IACQ;IACAC,WAAW,CAAC,YAAY;MACpB;MACA,IAAIC,YAAY,GAAG,MAAMb,cAAc,EAAE;MACzCc,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,YAAY,CAAC;MACtCJ,WAAW,CAACI,YAAY,CAAC;IAC7B,CAAC,EAAE,KAAK,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,aAAa,GAAG,MAAMC,UAAU,IAAI;IACtC;IACA;IACA;EAAA,CACH;EAGD,oBAAOd,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACHf,OAAA,CAACJ,IAAI;MAACoB,SAAS;MAACC,OAAO,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEC,EAAE,EAAE,CAAC;QAAEC,EAAE,EAAE,EAAE;QAAEC,EAAE,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAG,CAAE;MAC9DC,SAAS,EAAC,KAAK;MAACC,cAAc,EAAC,cAAc;MAC7CC,UAAU,EAAE,CAAE;MAAAV,QAAA,EAEbV,QAAQ,CAACqB,GAAG,CAACC,OAAO,iBAAI3B,OAAA,CAACF,WAAW;QAEjC6B,OAAO,EAAEA;QACT;QACA;MAAA,GAHKA,OAAO,CAACC,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAIjB;IACD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACE,iBACR;AACP;AAAC5B,EAAA,CAvCuBD,gBAAgB;AAAA8B,EAAA,GAAhB9B,gBAAgB;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}