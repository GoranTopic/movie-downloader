{"ast":null,"code":"import axios from 'axios';\n//import doenv from 'dotenv';\n//doenv.config();\n\n// yify api endpoint\n//var endpoint = process.env.YIFY || 'https://yts.lt/api/v2/';\nvar endpoint = 'https://yts.lt/api/v2/';\n\n// cors proxy\n//var cors_proxy = process.env.CORS_PROXY || 'http://147.182.241.239:4236';\nvar cors_proxy = 'http://147.182.241.239:4236';\n\n// super secret token, don't share =P \n//var token = process.env.CORS_TOKEN || '5df54d27-26d0-43ce-aef1-34d71e0b0dbb';\nvar token = '5df54d27-26d0-43ce-aef1-34d71e0b0dbb';\n\n// print env variables\n//console.log(process.env)\n\nconst query_movie_suggestions = async key => {\n  console.log(\"querying movie suggestions:\", key);\n  try {\n    const {\n      data\n    } = await axios.get(`${cors_proxy}/${endpoint}/list_movies.json`, {\n      params: {\n        query_term: key\n      },\n      headers: {\n        token\n      } // token for the cors proxy\n    });\n\n    if (data.status === 'ok') if (data.data.movies) {\n      console.log(\"got movie suggestions:\", data.data.movies);\n      return data.data.movies;\n    } else return [];\n    throw new Error(data.status_message);\n  } catch (err) {\n    console.error(err);\n    throw new Error('Something went wrong');\n  }\n};\nexport { query_movie_suggestions };","map":{"version":3,"names":["axios","endpoint","cors_proxy","token","query_movie_suggestions","key","console","log","data","get","params","query_term","headers","status","movies","Error","status_message","err","error"],"sources":["/home/telix/movie-downloader/frontend/src/yify-cli.js"],"sourcesContent":["import axios from 'axios';\n//import doenv from 'dotenv';\n//doenv.config();\n\n// yify api endpoint\n//var endpoint = process.env.YIFY || 'https://yts.lt/api/v2/';\nvar endpoint = 'https://yts.lt/api/v2/';\n\n// cors proxy\n//var cors_proxy = process.env.CORS_PROXY || 'http://147.182.241.239:4236';\nvar cors_proxy = 'http://147.182.241.239:4236';\n\n// super secret token, don't share =P \n//var token = process.env.CORS_TOKEN || '5df54d27-26d0-43ce-aef1-34d71e0b0dbb';\nvar token = '5df54d27-26d0-43ce-aef1-34d71e0b0dbb';\n\n// print env variables\n//console.log(process.env)\n\nconst query_movie_suggestions = async key => {\n  console.log(\"querying movie suggestions:\", key)\n  try {\n    const { data } = await axios\n      .get(`${cors_proxy}/${endpoint}/list_movies.json`, {\n        params: { query_term: key },\n        headers: { token } // token for the cors proxy\n      })\n    if (data.status === 'ok')\n      if (data.data.movies) {\n        console.log(\"got movie suggestions:\", data.data.movies)\n        return data.data.movies;\n      }\n      else\n        return []\n    throw new Error(data.status_message);\n  } catch (err) {\n    console.error(err)\n    throw new Error('Something went wrong');\n  }\n}\n\n\nexport { query_movie_suggestions  }\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;;AAEA;AACA;AACA,IAAIC,QAAQ,GAAG,wBAAwB;;AAEvC;AACA;AACA,IAAIC,UAAU,GAAG,6BAA6B;;AAE9C;AACA;AACA,IAAIC,KAAK,GAAG,sCAAsC;;AAElD;AACA;;AAEA,MAAMC,uBAAuB,GAAG,MAAMC,GAAG,IAAI;EAC3CC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,GAAG,CAAC;EAC/C,IAAI;IACF,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAMR,KAAK,CACzBS,GAAG,CAAE,GAAEP,UAAW,IAAGD,QAAS,mBAAkB,EAAE;MACjDS,MAAM,EAAE;QAAEC,UAAU,EAAEN;MAAI,CAAC;MAC3BO,OAAO,EAAE;QAAET;MAAM,CAAC,CAAC;IACrB,CAAC,CAAC;;IACJ,IAAIK,IAAI,CAACK,MAAM,KAAK,IAAI,EACtB,IAAIL,IAAI,CAACA,IAAI,CAACM,MAAM,EAAE;MACpBR,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,IAAI,CAACA,IAAI,CAACM,MAAM,CAAC;MACvD,OAAON,IAAI,CAACA,IAAI,CAACM,MAAM;IACzB,CAAC,MAEC,OAAO,EAAE;IACb,MAAM,IAAIC,KAAK,CAACP,IAAI,CAACQ,cAAc,CAAC;EACtC,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZX,OAAO,CAACY,KAAK,CAACD,GAAG,CAAC;IAClB,MAAM,IAAIF,KAAK,CAAC,sBAAsB,CAAC;EACzC;AACF,CAAC;AAGD,SAASX,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}