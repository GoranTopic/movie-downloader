{"ast":null,"code":"var _jsxFileName = \"/home/telix/movie-downloader/src/components/cardContent/WeightedPortafolioContent.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport moment from 'moment';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, responsiveFontSizes, ThemeProvider } from '@mui/material/styles';\nimport stylize from '../../utils/stylize';\n//import AreaChart from '../charts/AreaChart'\nimport { Box } from '@mui/material';\nimport CanvasJSReact from '../../utils/canvasjs.react';\nimport Stadistics from 'statistics.js';\nimport weight_combinator from '../../utils/weights_combinatinos';\nimport { TextField } from '@mui/material';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar bodyVars = {\n  stock: 'metric',\n  SDY: 'metric'\n};\nconst stats = new Stadistics([], bodyVars);\nmoment().format();\nconst StyledCardContent = stylize(CardContent, _ref => {\n  let {\n    theme,\n    $expand\n  } = _ref;\n  return {\n    transition: theme.transitions.create(['transform', 'width', 'height'], {\n      duration: theme.transitions.duration.standard\n    }),\n    textAlign: 'left',\n    maxWidth: 1200,\n    transform: $expand ? 'scale(1)' : 'scale(0.8)',\n    width: $expand ? '80vw' : 300,\n    height: $expand ? 'auto' : 150\n  };\n});\n_c = StyledCardContent;\nvar theme = createTheme();\ntheme = responsiveFontSizes(theme);\nconst calcCorrelationCoefficient = (returns1, returns2) => {\n  let corData = returns1.length <= returns2.length ? returns1.map((v, i) => ({\n    stock1: parseFloat(returns1[i]),\n    stock2: parseFloat(returns2[i])\n  })) : returns2.map((v, i) => ({\n    stock1: parseFloat(returns1[i]),\n    stock2: parseFloat(returns2[i])\n  }));\n  var bodyVars = {\n    stock1: 'metric',\n    stock2: 'metric'\n  };\n  let corStats = new Stadistics(corData, bodyVars);\n  return corStats.correlationCoefficient('stock1', 'stock2').correlationCoefficient;\n};\nconst uniqueCombinations = list => {\n  /* calcualte the correlation coefiecent between every posible pair of stock */\n  let combinations = [];\n  for (var [index, value] of list.entries()) while (++index < list.length) combinations.push([value, list[index]]);\n  return combinations;\n};\nconst calcReturn = (weights, stocks) => {\n  // calculate the returns of a given wight and r\n  let returns = stocks.map(s => s.mean); // use the mean\n  if (weights.length !== returns.length) return console.error('weight and returns array must be the same length');\n  return weights.reduce((total, weight, i) => total + weight * returns[i]);\n};\nconst calcRisk = (weights, stocks, correlations) => {\n  /*Portfolio Risk = âˆš [(Weight of A1^2 * Standard Deviation of A1^2) + (Weight of A2^2 * Standard Deviation of A2^2) + (2 X Correlation Coefficient * Standard Deviation of A1 * Standard Deviation of A2)],*/\n  // check is the stocks match the weights\n  if (weights.length !== stocks.length) return console.error('weights and stocks array must be the same length');\n  // takes a list of weight and a stdDev object with both stds, and \n  let stocksRisk = stocks.map(s => s.standardDeviation) // get the std Dev\n  .reduce((total, stdDev, i) => total + Math.pow(weights[i], 2) * Math.pow(stdDev, 2));\n  let correlatedRisk = correlations.map(c => c.correlation) // get the correlations\n  .reduce((total, correlation) => total + 2 * correlation.correlation * correlation.stdDev1 * correlation.stdDev2);\n  // return both risk's square root\n  return Math.sqrt(stocksRisk + correlatedRisk);\n};\nexport default function DocContent(_ref2) {\n  _s();\n  let {\n    expand,\n    stocks\n  } = _ref2;\n  // lets calcualte the mean varient and standar distribution for each stock\n  let [weights, setWeights] = React.useState(Array(stocks.length).fill(0));\n  let [weightsError, setWeightsError] = React.useState(true);\n  let [portafolio, setPortafolio] = React.useState({\n    stocks: [{\n      // example of the structure of the portafolio\n      stock: {},\n      weight: 0,\n      returns: [],\n      mean: 0,\n      variant: 0,\n      standardDeviation: 0\n    }],\n    correlations: [{\n      stock1: 'AAPL',\n      // example\n      stock2: 'COST',\n      // example\n      correlation: 0\n    }],\n    return: null,\n    risk: null\n  });\n  let [efficientFrontier, setEfficientFrontier] = React.useState();\n  React.useEffect(() => {\n    setWeights(Array(stocks.length).fill(0));\n  }, [stocks]);\n  React.useEffect(() => {\n    var _weights, _weights2;\n    if (weights.reduce((t, w) => t + w) > 1) setWeightsError(\"Cannot be greater than 100%\");\n    // update the Efficient Frontier, find all posibel combination of weights\n    //console.log('weights updated')\n    // here we calcualte all the values of the portafolio\n    let stockList = stocks.map(stock => {\n      // get the frist and last adjusted closing time\n      let {\n        timestamp,\n        indicators\n      } = stock.stockChart;\n      let {\n        close,\n        open\n      } = indicators.quote[0];\n      // get the returns for each close and open for every day\n      let returns = timestamp.map((time, i) => (close[i] - open[i]) / open[i]);\n      // add the mean variant standard dviation\n      return {\n        symbol: stock.symbol,\n        shortname: stock.shortname,\n        weights: null,\n        // null for now\n        returns: returns,\n        mean: stats.arithmeticMean(returns),\n        variant: stats.coefficientOfVariation(returns),\n        standardDeviation: stats.standardDeviation(returns)\n      };\n    });\n    //console.log('StockList:', stockList)\n    // now let's calculate the correlation between stocks\n    // get all the unique combinations of the stocks\n    let correlations = uniqueCombinations(stockList).map(_ref3 => {\n      let [s1, s2] = _ref3;\n      return {\n        stock1: s1.shortname,\n        stock2: s2.shortname,\n        symbol1: s1.symbol,\n        symbol2: s2.symbol,\n        returns1: s1.returns,\n        returns2: s2.returns,\n        stdDev1: s1.standardDeviation,\n        stdDev2: s2.standardDeviation,\n        correlation: calcCorrelationCoefficient(s1.returns, s2.returns)\n      };\n    });\n    //console.log('correlations:', correlations)\n    // now let's calcualte the return and risk fo the protafolio\n    // get all the unique combinations of the stocks\n    //console.log('weights outside', weights);\n    // calcualte the portafolio's returns\n    let portafolioReturn = calcReturn((_weights = weights) !== null && _weights !== void 0 ? _weights : stockList.map(s => s.weight),\n    //weights\n    stockList // the mean returns\n    );\n    //console.log('portafolio Return', portafolioReturn);\n    // calcualte the portafolio's risk\n    let risk = calcRisk(weights = (_weights2 = weights) !== null && _weights2 !== void 0 ? _weights2 : stocks.map(s => s.weight), stockList, correlations);\n    //console.log('portafolio risk:', risk);\n    // deinfe Effiecy fronteer function\n    let calcEF = (stocks, correlations) => weights => [calcReturn(weights, stocks), calcRisk(weights, stocks, correlations)];\n    setPortafolio({\n      stocks: stockList,\n      correlations,\n      return: portafolioReturn,\n      risk\n    });\n    //console.log('portafolio:', portafolio)\n    // set efficent fronteer\n    let weightCombinations = weight_combinator(weights.length, 10);\n    let calcEfficientFrontier = calcEF(stockList, correlations);\n    let EF = weightCombinations.map(weights => {\n      let [returns, risk] = calcEfficientFrontier(weights);\n      return {\n        y: returns,\n        x: risk\n      };\n    });\n    //console.log('efficientFrontier:', EF);\n    setEfficientFrontier(EF);\n  }, [stocks, weights]);\n  const createOnChangeWeight = index => event => {\n    //console.log('value:', event.target.value)\n    let percentage = Number.parseInt(event.target.value);\n    //console.log('percetage:', typeof percentage);\n    if (typeof percentage !== 'number') {\n      setWeightsError(\"Must be a number\");\n      setWeights(weights.map((w, i) => i === index ? 0 : w));\n    } else {\n      setWeights(weights.map((w, i) => i === index ? percentage / 100 : w));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledCardContent, {\n      $expand: expand,\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            paddingX: '6%',\n            marginY: '3%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: \" Weights Input \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexWrap: 'wrap'\n            },\n            children: portafolio.stocks.map((s, i) => /*#__PURE__*/_jsxDEV(TextField, {\n              sx: {\n                m: 1,\n                width: '25ch'\n              },\n              id: \"standard-basic\",\n              label: s.shortname + \"'s Weight\",\n              variant: \"standard\",\n              value: weights[i] * 100,\n              onChange: createOnChangeWeight(i),\n              type: \"number\"\n              //inputProps={{ 'aria-label': 'weight' }}\n              //InputLabelProps={{ shrink: true, }}\n              ,\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: \"%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 53\n                }, this)\n              }\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \" Portafolio risk:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 21\n          }, this), portafolio.risk ? /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Portfolio Risk = \\u221A [ \", portafolio.stocks.map((s, i) => `(${s.symbol}'s weight (${weights[i]})^2 * ${s.symbol}'s Standard Deviation (${s.standardDeviation.toFixed(3)})^2) + `), portafolio.correlations.map((c, i) => `( 2 * (${c.symbol1} and ${c.symbol2}'s corration: ${c.correlation.toFixed(3)}) * (${c.symbol1}'s Standard Deviation (${c.stdDev1.toFixed(3)}) * (${c.symbol2}'s Standard Deviation (${c.stdDev2.toFixed(3)})) ${i !== portafolio.correlations.length - 1 ? \" + \" : \"\"}`), \" ] = \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: portafolio.risk.toFixed(4)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \" Portafolio returns:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }, this), portafolio.return ? /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Portfolio Returns = \", portafolio.stocks.map((stock, i) => `(${stock.symbol}'s weight: ${weights[i]} * ${stock.symbol}'s mean return: ${stock.mean}) ${i !== portafolio.stocks.length - 1 ? \" + \" : \"\"}`), \" = \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: portafolio.return.toFixed(4)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n            options: {\n              animationEnabled: true,\n              exportEnabled: true,\n              theme: \"dark1\",\n              // \"light1\", \"dark1\", \"dark2\"\n              title: {\n                text: \"Efficincy Fonteer\"\n              },\n              axisY: {\n                title: \"returns\"\n              },\n              axisX: {\n                title: \"Risk\",\n                interval: 2\n              },\n              data: [{\n                type: \"line\",\n                dataPoints: efficientFrontier\n              }]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(DocContent, \"/a4+bN7AqJF/gBURalwdNq2cXNY=\");\n_c2 = DocContent;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledCardContent\");\n$RefreshReg$(_c2, \"DocContent\");","map":{"version":3,"names":["React","moment","CardContent","Typography","createTheme","responsiveFontSizes","ThemeProvider","stylize","Box","CanvasJSReact","Stadistics","weight_combinator","TextField","InputAdornment","jsxDEV","_jsxDEV","Fragment","_Fragment","CanvasJSChart","bodyVars","stock","SDY","stats","format","StyledCardContent","_ref","theme","$expand","transition","transitions","create","duration","standard","textAlign","maxWidth","transform","width","height","_c","calcCorrelationCoefficient","returns1","returns2","corData","length","map","v","i","stock1","parseFloat","stock2","corStats","correlationCoefficient","uniqueCombinations","list","combinations","index","value","entries","push","calcReturn","weights","stocks","returns","s","mean","console","error","reduce","total","weight","calcRisk","correlations","stocksRisk","standardDeviation","stdDev","Math","pow","correlatedRisk","c","correlation","stdDev1","stdDev2","sqrt","DocContent","_ref2","_s","expand","setWeights","useState","Array","fill","weightsError","setWeightsError","portafolio","setPortafolio","variant","return","risk","efficientFrontier","setEfficientFrontier","useEffect","_weights","_weights2","t","w","stockList","timestamp","indicators","stockChart","close","open","quote","time","symbol","shortname","arithmeticMean","coefficientOfVariation","_ref3","s1","s2","symbol1","symbol2","portafolioReturn","calcEF","weightCombinations","calcEfficientFrontier","EF","y","x","createOnChangeWeight","event","percentage","Number","parseInt","target","children","sx","paddingX","marginY","fileName","_jsxFileName","lineNumber","columnNumber","display","flexWrap","m","id","label","onChange","type","InputProps","startAdornment","position","toFixed","options","animationEnabled","exportEnabled","title","text","axisY","axisX","interval","data","dataPoints","_c2","$RefreshReg$"],"sources":["/home/telix/movie-downloader/src/components/cardContent/WeightedPortafolioContent.js"],"sourcesContent":["import * as React from 'react';\nimport moment from 'moment';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, responsiveFontSizes, ThemeProvider } from '@mui/material/styles';\nimport stylize from '../../utils/stylize'\n//import AreaChart from '../charts/AreaChart'\nimport { Box } from '@mui/material';\nimport CanvasJSReact from '../../utils/canvasjs.react';\nimport Stadistics from 'statistics.js';\nimport weight_combinator from '../../utils/weights_combinatinos';\nimport { TextField } from '@mui/material';\nimport InputAdornment from '@mui/material/InputAdornment';\n\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nvar bodyVars = {\n    stock: 'metric',\n    SDY: 'metric',\n};\n\nconst stats = new Stadistics([], bodyVars);\n\n\nmoment().format();\n\nconst StyledCardContent = stylize(CardContent, ({ theme, $expand }) => ({\n  transition: theme.transitions.create(['transform', 'width', 'height'], {\n    duration: theme.transitions.duration.standard,\n  }),\n  textAlign: 'left',\n  maxWidth: 1200,\n  transform: $expand ? 'scale(1)' : 'scale(0.8)',\n  width: $expand ? '80vw' : 300,\n  height: $expand ? 'auto' : 150, \n}));\n\nvar theme = createTheme();\ntheme = responsiveFontSizes(theme);\n\nconst calcCorrelationCoefficient = (returns1, returns2) => {\n    let corData = returns1.length <= returns2.length ?\n        returns1.map((v, i) => ({ stock1: parseFloat(returns1[i]), stock2: parseFloat(returns2[i]) })) :\n        returns2.map((v, i) => ({ stock1: parseFloat(returns1[i]), stock2: parseFloat(returns2[i]) }));\n    var bodyVars = { stock1: 'metric', stock2: 'metric' };\n    let corStats = new Stadistics(corData, bodyVars);\n    return corStats.correlationCoefficient('stock1', 'stock2').correlationCoefficient\n}\n\nconst uniqueCombinations = list => {\n    /* calcualte the correlation coefiecent between every posible pair of stock */\n    let combinations = []\n    for (var [index, value] of list.entries())\n        while (++index < list.length)\n            combinations.push([value, list[index]]);\n    return combinations\n}\n\nconst calcReturn = (weights, stocks) => {\n    // calculate the returns of a given wight and r\n    let returns = stocks.map(s => s.mean); // use the mean\n    if (weights.length !== returns.length)\n        return console.error('weight and returns array must be the same length');\n    return weights.reduce((total, weight, i) =>\n        total + (weight * returns[i])\n    );\n}\n\nconst calcRisk = (weights, stocks, correlations) => {\n    /*Portfolio Risk = âˆš [(Weight of A1^2 * Standard Deviation of A1^2) + (Weight of A2^2 * Standard Deviation of A2^2) + (2 X Correlation Coefficient * Standard Deviation of A1 * Standard Deviation of A2)],*/\n    // check is the stocks match the weights\n    if (weights.length !== stocks.length)\n        return console.error('weights and stocks array must be the same length');\n    // takes a list of weight and a stdDev object with both stds, and \n    let stocksRisk = stocks\n        .map(s => s.standardDeviation) // get the std Dev\n        .reduce((total, stdDev, i) =>\n            total + (Math.pow(weights[i], 2) * Math.pow(stdDev, 2))\n        );\n    let correlatedRisk = correlations\n        .map(c => c.correlation) // get the correlations\n        .reduce((total, correlation) =>\n            total + (2 * correlation.correlation * correlation.stdDev1 * correlation.stdDev2)\n        );\n    // return both risk's square root\n    return Math.sqrt(stocksRisk + correlatedRisk)\n}\n\nexport default function DocContent({ expand, stocks }) {\n    // lets calcualte the mean varient and standar distribution for each stock\n    let [weights, setWeights ] = React.useState(Array(stocks.length).fill(0));\n    let [weightsError, setWeightsError ] = React.useState(true);\n    let [portafolio, setPortafolio] = React.useState({\n        stocks: [{ // example of the structure of the portafolio\n            stock: {},\n            weight: 0,\n            returns: [],\n            mean: 0,\n            variant: 0,\n            standardDeviation: 0,\n        }],\n        correlations: [{\n            stock1: 'AAPL', // example\n            stock2: 'COST', // example\n            correlation: 0,\n        }],\n        return: null,\n        risk: null\n    });\n    let [efficientFrontier, setEfficientFrontier ] = React.useState();\n\n    React.useEffect(()=>{\n        setWeights(Array(stocks.length).fill(0))\n    }, [stocks])\n\n    React.useEffect(() => {\n        if(weights.reduce((t,w)=>t+w) > 1) setWeightsError(\"Cannot be greater than 100%\");\n        // update the Efficient Frontier, find all posibel combination of weights\n        //console.log('weights updated')\n        // here we calcualte all the values of the portafolio\n        let stockList = stocks.map(stock => {\n            // get the frist and last adjusted closing time\n            let { timestamp, indicators } = stock.stockChart;\n            let { close, open } = indicators.quote[0];\n            // get the returns for each close and open for every day\n            let returns = timestamp.map((time, i) => ((close[i] - open[i]) / open[i]));\n            // add the mean variant standard dviation\n            return {\n                symbol: stock.symbol,\n                shortname: stock.shortname,\n                weights: null, // null for now\n                returns: returns,\n                mean: stats.arithmeticMean(returns),\n                variant: stats.coefficientOfVariation(returns),\n                standardDeviation: stats.standardDeviation(returns),\n            }\n        })\n        //console.log('StockList:', stockList)\n        // now let's calculate the correlation between stocks\n        // get all the unique combinations of the stocks\n        let correlations = uniqueCombinations(stockList)\n            .map(([s1, s2]) => ({\n                stock1: s1.shortname,\n                stock2: s2.shortname,\n                symbol1: s1.symbol,\n                symbol2: s2.symbol,\n                returns1: s1.returns,\n                returns2: s2.returns,\n                stdDev1: s1.standardDeviation,\n                stdDev2: s2.standardDeviation,\n                correlation: calcCorrelationCoefficient(s1.returns, s2.returns),\n            }));\n        //console.log('correlations:', correlations)\n        // now let's calcualte the return and risk fo the protafolio\n        // get all the unique combinations of the stocks\n        //console.log('weights outside', weights);\n        // calcualte the portafolio's returns\n        let portafolioReturn = calcReturn(\n            weights ?? stockList.map(s => s.weight), //weights\n            stockList, // the mean returns\n        )\n        //console.log('portafolio Return', portafolioReturn);\n        // calcualte the portafolio's risk\n        let risk = calcRisk(\n            weights = weights ?? stocks.map(s => s.weight),\n            stockList,\n            correlations\n        )\n        //console.log('portafolio risk:', risk);\n        // deinfe Effiecy fronteer function\n        let calcEF = (stocks, correlations) => weights =>\n            [calcReturn(weights, stocks), calcRisk(weights, stocks, correlations)]\n        setPortafolio({\n            stocks: stockList,\n            correlations,\n            return: portafolioReturn,\n            risk,\n        });\n        //console.log('portafolio:', portafolio)\n        // set efficent fronteer\n        let weightCombinations = weight_combinator(weights.length, 10);\n        let calcEfficientFrontier = calcEF(stockList, correlations);\n        let EF = weightCombinations.map( weights => {\n          let [ returns, risk ] = calcEfficientFrontier(weights)\n          return { y: returns, x: risk }\n        });\n        //console.log('efficientFrontier:', EF);\n        setEfficientFrontier(EF)\n    }, [stocks, weights])\n\n    const createOnChangeWeight = index => event => {\n        //console.log('value:', event.target.value)\n        let percentage = Number.parseInt(event.target.value);\n        //console.log('percetage:', typeof percentage);\n        if (typeof percentage !== 'number') {\n            setWeightsError(\"Must be a number\")\n            setWeights(weights.map((w, i) => i === index ? 0: w)); \n        }else{\n            setWeights(weights.map((w, i) => i === index ? (percentage / 100) : w));\n        }\n    }\n\n    return <>\n        <StyledCardContent $expand={expand}>\n            <ThemeProvider theme={theme}>\n                <Box sx={{ paddingX: '6%', marginY: '3%' }}>\n                    <Typography variant=\"h4\"> Weights Input </Typography>\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap' }}>\n                        {portafolio.stocks.map((s, i) =>\n                            <TextField\n                                sx={{ m: 1, width: '25ch' }}\n                                key={i}\n                                id=\"standard-basic\"\n                                label={s.shortname + \"'s Weight\"}\n                                variant=\"standard\"\n                                value={weights[i] * 100}\n                                onChange={createOnChangeWeight(i)}\n                                type=\"number\"\n                                //inputProps={{ 'aria-label': 'weight' }}\n                                //InputLabelProps={{ shrink: true, }}\n                                InputProps={{\n                                    startAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n                                }}\n                            />\n                        )}\n                    </Box>\n                    <Typography variant=\"h6\"> Portafolio risk:</Typography>\n                    {(portafolio.risk) ? <Typography >\n                        Portfolio Risk = âˆš [ {portafolio.stocks.map((s, i) =>\n                            `(${s.symbol}'s weight (${weights[i]})^2 * ${s.symbol}'s Standard Deviation (${s.standardDeviation.toFixed(3)})^2) + `\n                        )}\n                        {portafolio.correlations.map((c, i) =>\n                            `( 2 * (${c.symbol1} and ${c.symbol2}'s corration: ${c.correlation.toFixed(3)}) * (${c.symbol1}'s Standard Deviation (${c.stdDev1.toFixed(3)}) * (${c.symbol2}'s Standard Deviation (${c.stdDev2.toFixed(3)})) ${(i !== portafolio.correlations.length - 1) ? \" + \" : \"\"}`\n                        )} ] = <b>{portafolio.risk.toFixed(4)}</b>\n                    </Typography> : <></>}\n                    <Typography variant=\"h6\"> Portafolio returns:</Typography>\n                    {(portafolio.return) ? <Typography >\n                        Portfolio Returns = {portafolio.stocks.map((stock, i) =>\n                            `(${stock.symbol}'s weight: ${weights[i]} * ${stock.symbol}'s mean return: ${stock.mean}) ${(i !== portafolio.stocks.length - 1) ? \" + \" : \"\"}`\n                        )} = <b>{portafolio.return.toFixed(4)}</b>\n                    </Typography> : <></>}\n                    <CanvasJSChart options={{\n                        animationEnabled: true,\n                        exportEnabled: true,\n                        theme: \"dark1\", // \"light1\", \"dark1\", \"dark2\"\n                        title: {\n                            text: \"Efficincy Fonteer\"\n                        },\n                        axisY: {\n                            title: \"returns\",\n                        },\n                        axisX: {\n                            title: \"Risk\",\n                            interval: 2\n                        },\n                        data: [{\n                            type: \"line\",\n                            dataPoints: efficientFrontier,\n                        }]\n                    }} />\n                </Box>\n            </ThemeProvider>\n        </StyledCardContent>\n    </>\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}