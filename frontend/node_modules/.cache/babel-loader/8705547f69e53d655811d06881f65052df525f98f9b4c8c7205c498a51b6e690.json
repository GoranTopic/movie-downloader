{"ast":null,"code":"var _jsxFileName = \"/home/telix/movie-downloader/src/components/cards/Beta.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ExpandableCard from '../ExpandableCard.js';\nimport BetaContent from '../cardContent/BetaContent';\nimport { query_all_modules, query_stock_chart } from '../../queries/query_yahoo.js';\n\n// this is for homework purpouse only\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst load_quotesummery_SPY = async stock => {\n  /* this function queries all the modules of the S&P 500 */\n  let response = await query_all_modules(stock);\n  console.log('reponse from SPY:', response);\n  // if there was a error\n  if (response.data.quoteSummary.error) throw new Error(response.data.quoteSummary.error);\n  return response.data.quoteSummary.result[0];\n};\nconst load_chart_SPY = async stock => {\n  let response = null;\n  let metrics = 'high';\n  let interval = '1mo';\n  let range = '20y';\n  // modules to query\n  response = await query_stock_chart(stock, {\n    metrics,\n    interval,\n    range\n  });\n  console.log('reponse from stockChart:', response);\n  // if there was a error\n  if (response.data.chart.error) throw new Error(response.data.chart.error);\n  return response.data.chart.result[0];\n};\nexport default function RateOfReturn(_ref) {\n  _s();\n  let {\n    stocks,\n    index\n  } = _ref;\n  /* check if stock has default key stadistics,\n  takes in a list of stocks as a parameter, filter out all but the active ones */\n  const title = 'Beta';\n  const subheader = `Calcualte the Beta in relation to the S&P 500`;\n  const [SDY, setSDY] = React.useState({});\n  React.useEffect(() => {\n    /* quries data fro th stock to the APi */\n    // start quetirs\n    (async () => {\n      let data = {\n        symbol: 'SPY'\n      };\n      await Promise.all([\n      // query quote summery\n      load_quotesummery_SPY(data).then(res => data['quoteSummary'] = res),\n      // query stock chart\n      load_chart_SPY(data).then(res => data['stockChart'] = res)]);\n      setSDY({\n        ...data,\n        color: {\n          topColor: 'rgba(186,182,182, 0.56)',\n          bottomColor: 'rgba(186,182,182, 0.04)',\n          lineColor: 'rgba(186,182,182, 1)'\n        },\n        active: true\n      });\n    })();\n  }, []);\n\n  // stock that we dont want to render\n  const stockFilter = stock => stock.active &&\n  // if it is not active, \n  stock.quoteSummary &&\n  // if it does not have quotesummery\n  stock.stockChart &&\n  // we need to chart \n  stock.index;\n  // filter stocks that are active and have a defaultKey Stadistics\n  const activeStocks = stocks.filter(stockFilter);\n  // if not active stocks\n  if (activeStocks.length === 0) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  // or if we have the data for it\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ExpandableCard, {\n      stocks: [...activeStocks, SDY],\n      title: title,\n      subheader: subheader,\n      children: /*#__PURE__*/_jsxDEV(BetaContent, {\n        stocks: activeStocks,\n        SDYStock: SDY,\n        index: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(RateOfReturn, \"PJ5CSoZlaq+pc+iuZAnjlwB44yo=\");\n_c = RateOfReturn;\nvar _c;\n$RefreshReg$(_c, \"RateOfReturn\");","map":{"version":3,"names":["React","ExpandableCard","BetaContent","query_all_modules","query_stock_chart","Fragment","_Fragment","jsxDEV","_jsxDEV","load_quotesummery_SPY","stock","response","console","log","data","quoteSummary","error","Error","result","load_chart_SPY","metrics","interval","range","chart","RateOfReturn","_ref","_s","stocks","index","title","subheader","SDY","setSDY","useState","useEffect","symbol","Promise","all","then","res","color","topColor","bottomColor","lineColor","active","stockFilter","stockChart","activeStocks","filter","length","children","SDYStock","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/telix/movie-downloader/src/components/cards/Beta.js"],"sourcesContent":["import React from 'react';\nimport ExpandableCard from '../ExpandableCard.js';\nimport BetaContent from '../cardContent/BetaContent';\nimport { query_all_modules, query_stock_chart } from '../../queries/query_yahoo.js';\n\n// this is for homework purpouse only\nconst load_quotesummery_SPY = async stock => {\n    /* this function queries all the modules of the S&P 500 */\n    let response = await query_all_modules(stock);\n    console.log('reponse from SPY:', response)\n    // if there was a error\n    if (response.data.quoteSummary.error)\n        throw new Error(response.data.quoteSummary.error)\n    return response.data.quoteSummary.result[0];\n}\n\nconst load_chart_SPY = async stock => {\n    let response = null;\n    let metrics = 'high';\n    let interval = '1mo';\n    let range = '20y';\n    // modules to query\n    response = await query_stock_chart(stock, { metrics, interval, range });\n    console.log('reponse from stockChart:', response)\n    // if there was a error\n    if (response.data.chart.error)\n        throw new Error(response.data.chart.error)\n    return response.data.chart.result[0]\n}\n\nexport default function RateOfReturn({ stocks, index }) {\n    /* check if stock has default key stadistics,\n    takes in a list of stocks as a parameter, filter out all but the active ones */\n    const title = 'Beta';\n    const subheader = `Calcualte the Beta in relation to the S&P 500`;\n    const [SDY, setSDY] = React.useState({});\n\n  React.useEffect(() => {\n    /* quries data fro th stock to the APi */\n    // start quetirs\n    (async () => {\n      let data = { symbol: 'SPY' };\n      await Promise.all([\n        // query quote summery\n        load_quotesummery_SPY(data)\n          .then(res => data['quoteSummary'] = res),\n        // query stock chart\n        load_chart_SPY(data)\n          .then(res => data['stockChart'] = res)\n      ]);\n      setSDY({\n        ...data,\n        color: {\n          topColor: 'rgba(186,182,182, 0.56)',\n          bottomColor: 'rgba(186,182,182, 0.04)',\n          lineColor: 'rgba(186,182,182, 1)',\n        },\n        active: true\n      });\n    })()\n  }, []);\n\n\n    // stock that we dont want to render\n    const stockFilter = stock => (\n        stock.active && // if it is not active, \n        stock.quoteSummary && // if it does not have quotesummery\n        stock.stockChart && // we need to chart \n        stock.index\n    )\n    // filter stocks that are active and have a defaultKey Stadistics\n    const activeStocks = stocks.filter(stockFilter);\n    // if not active stocks\n    if (activeStocks.length === 0) return <></>\n    // or if we have the data for it\n    return <>\n        <ExpandableCard stocks={[ ...activeStocks, SDY ]} title={title} subheader={subheader} >\n            <BetaContent stocks={activeStocks} SDYStock={SDY} index={index} />\n        </ExpandableCard>\n    </>\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,WAAW,MAAM,4BAA4B;AACpD,SAASC,iBAAiB,EAAEC,iBAAiB,QAAQ,8BAA8B;;AAEnF;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,qBAAqB,GAAG,MAAMC,KAAK,IAAI;EACzC;EACA,IAAIC,QAAQ,GAAG,MAAMR,iBAAiB,CAACO,KAAK,CAAC;EAC7CE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,QAAQ,CAAC;EAC1C;EACA,IAAIA,QAAQ,CAACG,IAAI,CAACC,YAAY,CAACC,KAAK,EAChC,MAAM,IAAIC,KAAK,CAACN,QAAQ,CAACG,IAAI,CAACC,YAAY,CAACC,KAAK,CAAC;EACrD,OAAOL,QAAQ,CAACG,IAAI,CAACC,YAAY,CAACG,MAAM,CAAC,CAAC,CAAC;AAC/C,CAAC;AAED,MAAMC,cAAc,GAAG,MAAMT,KAAK,IAAI;EAClC,IAAIC,QAAQ,GAAG,IAAI;EACnB,IAAIS,OAAO,GAAG,MAAM;EACpB,IAAIC,QAAQ,GAAG,KAAK;EACpB,IAAIC,KAAK,GAAG,KAAK;EACjB;EACAX,QAAQ,GAAG,MAAMP,iBAAiB,CAACM,KAAK,EAAE;IAAEU,OAAO;IAAEC,QAAQ;IAAEC;EAAM,CAAC,CAAC;EACvEV,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAAC;EACjD;EACA,IAAIA,QAAQ,CAACG,IAAI,CAACS,KAAK,CAACP,KAAK,EACzB,MAAM,IAAIC,KAAK,CAACN,QAAQ,CAACG,IAAI,CAACS,KAAK,CAACP,KAAK,CAAC;EAC9C,OAAOL,QAAQ,CAACG,IAAI,CAACS,KAAK,CAACL,MAAM,CAAC,CAAC,CAAC;AACxC,CAAC;AAED,eAAe,SAASM,YAAYA,CAAAC,IAAA,EAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAAH,IAAA;EAClD;AACJ;EACI,MAAMI,KAAK,GAAG,MAAM;EACpB,MAAMC,SAAS,GAAI,+CAA8C;EACjE,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGhC,KAAK,CAACiC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1CjC,KAAK,CAACkC,SAAS,CAAC,MAAM;IACpB;IACA;IACA,CAAC,YAAY;MACX,IAAIpB,IAAI,GAAG;QAAEqB,MAAM,EAAE;MAAM,CAAC;MAC5B,MAAMC,OAAO,CAACC,GAAG,CAAC;MAChB;MACA5B,qBAAqB,CAACK,IAAI,CAAC,CACxBwB,IAAI,CAACC,GAAG,IAAIzB,IAAI,CAAC,cAAc,CAAC,GAAGyB,GAAG,CAAC;MAC1C;MACApB,cAAc,CAACL,IAAI,CAAC,CACjBwB,IAAI,CAACC,GAAG,IAAIzB,IAAI,CAAC,YAAY,CAAC,GAAGyB,GAAG,CAAC,CACzC,CAAC;MACFP,MAAM,CAAC;QACL,GAAGlB,IAAI;QACP0B,KAAK,EAAE;UACLC,QAAQ,EAAE,yBAAyB;UACnCC,WAAW,EAAE,yBAAyB;UACtCC,SAAS,EAAE;QACb,CAAC;QACDC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ,CAAC,GAAG;EACN,CAAC,EAAE,EAAE,CAAC;;EAGJ;EACA,MAAMC,WAAW,GAAGnC,KAAK,IACrBA,KAAK,CAACkC,MAAM;EAAI;EAChBlC,KAAK,CAACK,YAAY;EAAI;EACtBL,KAAK,CAACoC,UAAU;EAAI;EACpBpC,KAAK,CAACkB,KACT;EACD;EACA,MAAMmB,YAAY,GAAGpB,MAAM,CAACqB,MAAM,CAACH,WAAW,CAAC;EAC/C;EACA,IAAIE,YAAY,CAACE,MAAM,KAAK,CAAC,EAAE,oBAAOzC,OAAA,CAAAF,SAAA,oBAAK;EAC3C;EACA,oBAAOE,OAAA,CAAAF,SAAA;IAAA4C,QAAA,eACH1C,OAAA,CAACP,cAAc;MAAC0B,MAAM,EAAE,CAAE,GAAGoB,YAAY,EAAEhB,GAAG,CAAG;MAACF,KAAK,EAAEA,KAAM;MAACC,SAAS,EAAEA,SAAU;MAAAoB,QAAA,eACjF1C,OAAA,CAACN,WAAW;QAACyB,MAAM,EAAEoB,YAAa;QAACI,QAAQ,EAAEpB,GAAI;QAACH,KAAK,EAAEA;MAAM;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACrD,iBAClB;AACP;AAAC7B,EAAA,CAlDuBF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}