{"ast":null,"code":"var _jsxFileName = \"/home/telix/movie-downloader/frontend/src/components/TrasnmissionList.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\n//import TorrentCard from './TorrentCard.js';\nimport Grid from '@mui/material/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TrasnmissionList(_ref) {\n  _s();\n  let {\n    selectStock\n  } = _ref;\n  /* this is a coponent that will be used to show the torrents and their status frmo the Trasnmission-remote client */\n  const [torrents, seTorrents] = React.useState([]);\n  // would this be loagin if there are no query result?\n\n  React.useEffect(() => {\n    /* as soon as the compnent loads,\n     * lets query transimission-remote for the list of torrents */\n    // return empty list of now \n    seTorrents([]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      columns: {\n        xs: 1,\n        sm: 1,\n        md: 12,\n        lg: 12,\n        xl: 14\n      },\n      direction: \"row\",\n      justifyContent: \"space-evenly\",\n      rowSpacing: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(TrasnmissionList, \"ImKriOLrWYWm4zuqRFQqCzjaM6g=\");\n_c = TrasnmissionList;\nvar _c;\n$RefreshReg$(_c, \"TrasnmissionList\");","map":{"version":3,"names":["React","Grid","jsxDEV","_jsxDEV","Fragment","_Fragment","TrasnmissionList","_ref","_s","selectStock","torrents","seTorrents","useState","useEffect","children","container","columns","xs","sm","md","lg","xl","direction","justifyContent","rowSpacing","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/telix/movie-downloader/frontend/src/components/TrasnmissionList.js"],"sourcesContent":["import * as React from 'react';\n//import TorrentCard from './TorrentCard.js';\nimport Grid from '@mui/material/Grid';\n\nexport default function TrasnmissionList({selectStock}) {\n  /* this is a coponent that will be used to show the torrents and their status frmo the Trasnmission-remote client */\n  const [ torrents, seTorrents ] = React.useState([]);\n  // would this be loagin if there are no query result?\n\n    React.useEffect(() => {\n        /* as soon as the compnent loads,\n         * lets query transimission-remote for the list of torrents */\n        // return empty list of now \n        seTorrents([]);        \n    }, []);\n\n    return <>\n        <Grid container columns={{ xs: 1, sm: 1, md: 12, lg: 12, xl: 14 }}\n    direction=\"row\" justifyContent=\"space-evenly\"\n    rowSpacing={5}>\n        { /* for each torrent map to torent card \n   { torrents.map( torrent =>\n        <TorrentCard \n        key={torrent.id} \n        torrent={torrent}\n        selectStock={selectStock} />\n    ) }\n    */ }\n        </Grid>\n        </>\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B;AACA,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,eAAe,SAASC,gBAAgBA,CAAAC,IAAA,EAAgB;EAAAC,EAAA;EAAA,IAAf;IAACC;EAAW,CAAC,GAAAF,IAAA;EACpD;EACA,MAAM,CAAEG,QAAQ,EAAEC,UAAU,CAAE,GAAGX,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;EACnD;;EAEEZ,KAAK,CAACa,SAAS,CAAC,MAAM;IAClB;AACR;IACQ;IACAF,UAAU,CAAC,EAAE,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOR,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACHX,OAAA,CAACF,IAAI;MAACc,SAAS;MAACC,OAAO,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEC,EAAE,EAAE,CAAC;QAAEC,EAAE,EAAE,EAAE;QAAEC,EAAE,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAG,CAAE;MACtEC,SAAS,EAAC,KAAK;MAACC,cAAc,EAAC,cAAc;MAC7CC,UAAU,EAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EASH,iBACJ;AACX;AAACpB,EAAA,CA1BuBF,gBAAgB;AAAAuB,EAAA,GAAhBvB,gBAAgB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}